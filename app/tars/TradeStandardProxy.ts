// **********************************************************************
// Parsed By TarsParser(2.4.5), Generated By tars2node(20200707)
// TarsParser Maintained By <TARS> and tars2node Maintained By <superzheng>
// Generated from "TradeStandard.tars" by Client Mode
// **********************************************************************

/* tslint:disable */
/* eslint-disable */

/// <reference types="node" />
import assert = require("assert");
import * as TarsStream from "@tars/stream";

const _hasOwnProperty = Object.prototype.hasOwnProperty;
export namespace JV {
    export enum ETradeStandardOrderState {
        eOrderStateCommited = 1,
        eOrderStateCommitedToTA = 2,
        eOrderStateCommitedAndTAConfirmed = 3,
        eOrderStateConfirmed = 4,
        eOrderStateTARejected = 10,
        eOrderStateCanceled = 20
    }

    export namespace ETradeStandardOrderState {
        export const _classname = "JV.ETradeStandardOrderState";
        export function _write(os: TarsStream.TarsOutputStream, tag: number, val: number) { return os.writeInt32(tag, val); }
        export function _read(is: TarsStream.TarsInputStream, tag: number, def?: number) { return is.readInt32(tag, true, def); }
    }


    export class TFundBuyReq {
        discount_rate_of_commission: number = 0;
        distributor_code: string = "";
        imei: string = "";
        ip_address: string = "";
        mac_address: string = "";
        share_class: string = "";
        uuid: string = "";
        clear_date: string = "";
        inst_id: string = "";
        account_id: string = "";
        ta_account: string = "";
        ta_code: string = "";
        trade_account: string = "";
        trade_amt: number = 0;
        trade_pwd: string = "";
        trade_sub_type: number = 0;
        order_list_id: string = "";
        broker_id: number = 0;
        msg_no: string = "";
        trans_time: string = "";
        device_info: string = "";
        uid: string = "";
        client_id: string = "";
        approp_match_result: string = "";
        contract_file: string = "";
        approp_match_file: string = "";
        approp_warn_file: string = "";
        prd_risk_note_file: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundBuyReq";
        protected static _classname = "JV.TFundBuyReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundBuyReq;
            tmp.discount_rate_of_commission = is.readDouble(0, false, 0);
            tmp.distributor_code = is.readString(1, false, "");
            tmp.imei = is.readString(2, false, "");
            tmp.ip_address = is.readString(3, false, "");
            tmp.mac_address = is.readString(4, false, "");
            tmp.share_class = is.readString(5, false, "");
            tmp.uuid = is.readString(6, false, "");
            tmp.clear_date = is.readString(7, false, "");
            tmp.inst_id = is.readString(8, false, "");
            tmp.account_id = is.readString(9, false, "");
            tmp.ta_account = is.readString(10, false, "");
            tmp.ta_code = is.readString(11, false, "");
            tmp.trade_account = is.readString(12, false, "");
            tmp.trade_amt = is.readDouble(13, false, 0);
            tmp.trade_pwd = is.readString(14, false, "");
            tmp.trade_sub_type = is.readInt32(15, false, 0);
            tmp.order_list_id = is.readString(16, false, "");
            tmp.broker_id = is.readInt32(17, false, 0);
            tmp.msg_no = is.readString(18, false, "");
            tmp.trans_time = is.readString(19, false, "");
            tmp.device_info = is.readString(20, false, "");
            tmp.uid = is.readString(21, false, "");
            tmp.client_id = is.readString(22, false, "");
            tmp.approp_match_result = is.readString(23, false, "");
            tmp.contract_file = is.readString(24, false, "");
            tmp.approp_match_file = is.readString(25, false, "");
            tmp.approp_warn_file = is.readString(26, false, "");
            tmp.prd_risk_note_file = is.readString(27, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeDouble(0, this.discount_rate_of_commission);
            os.writeString(1, this.distributor_code);
            os.writeString(2, this.imei);
            os.writeString(3, this.ip_address);
            os.writeString(4, this.mac_address);
            os.writeString(5, this.share_class);
            os.writeString(6, this.uuid);
            os.writeString(7, this.clear_date);
            os.writeString(8, this.inst_id);
            os.writeString(9, this.account_id);
            os.writeString(10, this.ta_account);
            os.writeString(11, this.ta_code);
            os.writeString(12, this.trade_account);
            os.writeDouble(13, this.trade_amt);
            os.writeString(14, this.trade_pwd);
            os.writeInt32(15, this.trade_sub_type);
            os.writeString(16, this.order_list_id);
            os.writeInt32(17, this.broker_id);
            os.writeString(18, this.msg_no);
            os.writeString(19, this.trans_time);
            os.writeString(20, this.device_info);
            os.writeString(21, this.uid);
            os.writeString(22, this.client_id);
            os.writeString(23, this.approp_match_result);
            os.writeString(24, this.contract_file);
            os.writeString(25, this.approp_match_file);
            os.writeString(26, this.approp_warn_file);
            os.writeString(27, this.prd_risk_note_file);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundBuyReq.Object { 
            return {
                discount_rate_of_commission: this.discount_rate_of_commission,
                distributor_code: this.distributor_code,
                imei: this.imei,
                ip_address: this.ip_address,
                mac_address: this.mac_address,
                share_class: this.share_class,
                uuid: this.uuid,
                clear_date: this.clear_date,
                inst_id: this.inst_id,
                account_id: this.account_id,
                ta_account: this.ta_account,
                ta_code: this.ta_code,
                trade_account: this.trade_account,
                trade_amt: this.trade_amt,
                trade_pwd: this.trade_pwd,
                trade_sub_type: this.trade_sub_type,
                order_list_id: this.order_list_id,
                broker_id: this.broker_id,
                msg_no: this.msg_no,
                trans_time: this.trans_time,
                device_info: this.device_info,
                uid: this.uid,
                client_id: this.client_id,
                approp_match_result: this.approp_match_result,
                contract_file: this.contract_file,
                approp_match_file: this.approp_match_file,
                approp_warn_file: this.approp_warn_file,
                prd_risk_note_file: this.prd_risk_note_file
            };
        }

        readFromObject(json: TFundBuyReq.Object) { 
            _hasOwnProperty.call(json, "discount_rate_of_commission") && (this.discount_rate_of_commission = json.discount_rate_of_commission!);
            _hasOwnProperty.call(json, "distributor_code") && (this.distributor_code = json.distributor_code!);
            _hasOwnProperty.call(json, "imei") && (this.imei = json.imei!);
            _hasOwnProperty.call(json, "ip_address") && (this.ip_address = json.ip_address!);
            _hasOwnProperty.call(json, "mac_address") && (this.mac_address = json.mac_address!);
            _hasOwnProperty.call(json, "share_class") && (this.share_class = json.share_class!);
            _hasOwnProperty.call(json, "uuid") && (this.uuid = json.uuid!);
            _hasOwnProperty.call(json, "clear_date") && (this.clear_date = json.clear_date!);
            _hasOwnProperty.call(json, "inst_id") && (this.inst_id = json.inst_id!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "ta_account") && (this.ta_account = json.ta_account!);
            _hasOwnProperty.call(json, "ta_code") && (this.ta_code = json.ta_code!);
            _hasOwnProperty.call(json, "trade_account") && (this.trade_account = json.trade_account!);
            _hasOwnProperty.call(json, "trade_amt") && (this.trade_amt = json.trade_amt!);
            _hasOwnProperty.call(json, "trade_pwd") && (this.trade_pwd = json.trade_pwd!);
            _hasOwnProperty.call(json, "trade_sub_type") && (this.trade_sub_type = json.trade_sub_type!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "broker_id") && (this.broker_id = json.broker_id!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "trans_time") && (this.trans_time = json.trans_time!);
            _hasOwnProperty.call(json, "device_info") && (this.device_info = json.device_info!);
            _hasOwnProperty.call(json, "uid") && (this.uid = json.uid!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "approp_match_result") && (this.approp_match_result = json.approp_match_result!);
            _hasOwnProperty.call(json, "contract_file") && (this.contract_file = json.contract_file!);
            _hasOwnProperty.call(json, "approp_match_file") && (this.approp_match_file = json.approp_match_file!);
            _hasOwnProperty.call(json, "approp_warn_file") && (this.approp_warn_file = json.approp_warn_file!);
            _hasOwnProperty.call(json, "prd_risk_note_file") && (this.prd_risk_note_file = json.prd_risk_note_file!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundBuyReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundBuyReq._readFrom(is);
        }
    }

    export namespace TFundBuyReq {
        export interface Object {
            discount_rate_of_commission?: number;
            distributor_code?: string;
            imei?: string;
            ip_address?: string;
            mac_address?: string;
            share_class?: string;
            uuid?: string;
            clear_date?: string;
            inst_id?: string;
            account_id?: string;
            ta_account?: string;
            ta_code?: string;
            trade_account?: string;
            trade_amt?: number;
            trade_pwd?: string;
            trade_sub_type?: number;
            order_list_id?: string;
            broker_id?: number;
            msg_no?: string;
            trans_time?: string;
            device_info?: string;
            uid?: string;
            client_id?: string;
            approp_match_result?: string;
            contract_file?: string;
            approp_match_file?: string;
            approp_warn_file?: string;
            prd_risk_note_file?: string;
        }
    }

    export class TFundBuyRsp {
        busi_list_id: string = "";
        order_list_id: string = "";
        busi_timestamp: string = "";
        froze_amt: number = 0;
        msg_no: string = "";
        original_code: number = 0;
        msg: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundBuyRsp";
        protected static _classname = "JV.TFundBuyRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundBuyRsp;
            tmp.busi_list_id = is.readString(0, false, "");
            tmp.order_list_id = is.readString(1, false, "");
            tmp.busi_timestamp = is.readString(2, false, "");
            tmp.froze_amt = is.readDouble(3, false, 0);
            tmp.msg_no = is.readString(4, false, "");
            tmp.original_code = is.readInt32(5, false, 0);
            tmp.msg = is.readString(6, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.busi_list_id);
            os.writeString(1, this.order_list_id);
            os.writeString(2, this.busi_timestamp);
            os.writeDouble(3, this.froze_amt);
            os.writeString(4, this.msg_no);
            os.writeInt32(5, this.original_code);
            os.writeString(6, this.msg);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundBuyRsp.Object { 
            return {
                busi_list_id: this.busi_list_id,
                order_list_id: this.order_list_id,
                busi_timestamp: this.busi_timestamp,
                froze_amt: this.froze_amt,
                msg_no: this.msg_no,
                original_code: this.original_code,
                msg: this.msg
            };
        }

        readFromObject(json: TFundBuyRsp.Object) { 
            _hasOwnProperty.call(json, "busi_list_id") && (this.busi_list_id = json.busi_list_id!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "busi_timestamp") && (this.busi_timestamp = json.busi_timestamp!);
            _hasOwnProperty.call(json, "froze_amt") && (this.froze_amt = json.froze_amt!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundBuyRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundBuyRsp._readFrom(is);
        }
    }

    export namespace TFundBuyRsp {
        export interface Object {
            busi_list_id?: string;
            order_list_id?: string;
            busi_timestamp?: string;
            froze_amt?: number;
            msg_no?: string;
            original_code?: number;
            msg?: string;
        }
    }

    export class TFundRedeemReq {
        imei: string = "";
        ip_address: string = "";
        large_redemption_flag: number = 0;
        mac_address: string = "";
        share_class: string = "";
        uuid: string = "";
        broker_id: number = 0;
        account_id: string = "";
        trade_pwd: string = "";
        ta_code: string = "";
        ta_account: string = "";
        trade_account: string = "";
        order_list_id: string = "";
        inst_id: string = "";
        redeem_unit: number = 0;
        dest_distributor_code: string = "";
        clear_date: string = "";
        msg_no: string = "";
        trans_time: string = "";
        device_info: string = "";
        uid: string = "";
        client_id: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundRedeemReq";
        protected static _classname = "JV.TFundRedeemReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundRedeemReq;
            tmp.imei = is.readString(0, false, "");
            tmp.ip_address = is.readString(1, false, "");
            tmp.large_redemption_flag = is.readInt32(2, false, 0);
            tmp.mac_address = is.readString(3, false, "");
            tmp.share_class = is.readString(4, false, "");
            tmp.uuid = is.readString(5, false, "");
            tmp.broker_id = is.readInt32(6, false, 0);
            tmp.account_id = is.readString(7, false, "");
            tmp.trade_pwd = is.readString(8, false, "");
            tmp.ta_code = is.readString(9, false, "");
            tmp.ta_account = is.readString(10, false, "");
            tmp.trade_account = is.readString(11, false, "");
            tmp.order_list_id = is.readString(12, false, "");
            tmp.inst_id = is.readString(13, false, "");
            tmp.redeem_unit = is.readDouble(14, false, 0);
            tmp.dest_distributor_code = is.readString(15, false, "");
            tmp.clear_date = is.readString(16, false, "");
            tmp.msg_no = is.readString(17, false, "");
            tmp.trans_time = is.readString(18, false, "");
            tmp.device_info = is.readString(19, false, "");
            tmp.uid = is.readString(20, false, "");
            tmp.client_id = is.readString(21, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.imei);
            os.writeString(1, this.ip_address);
            os.writeInt32(2, this.large_redemption_flag);
            os.writeString(3, this.mac_address);
            os.writeString(4, this.share_class);
            os.writeString(5, this.uuid);
            os.writeInt32(6, this.broker_id);
            os.writeString(7, this.account_id);
            os.writeString(8, this.trade_pwd);
            os.writeString(9, this.ta_code);
            os.writeString(10, this.ta_account);
            os.writeString(11, this.trade_account);
            os.writeString(12, this.order_list_id);
            os.writeString(13, this.inst_id);
            os.writeDouble(14, this.redeem_unit);
            os.writeString(15, this.dest_distributor_code);
            os.writeString(16, this.clear_date);
            os.writeString(17, this.msg_no);
            os.writeString(18, this.trans_time);
            os.writeString(19, this.device_info);
            os.writeString(20, this.uid);
            os.writeString(21, this.client_id);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundRedeemReq.Object { 
            return {
                imei: this.imei,
                ip_address: this.ip_address,
                large_redemption_flag: this.large_redemption_flag,
                mac_address: this.mac_address,
                share_class: this.share_class,
                uuid: this.uuid,
                broker_id: this.broker_id,
                account_id: this.account_id,
                trade_pwd: this.trade_pwd,
                ta_code: this.ta_code,
                ta_account: this.ta_account,
                trade_account: this.trade_account,
                order_list_id: this.order_list_id,
                inst_id: this.inst_id,
                redeem_unit: this.redeem_unit,
                dest_distributor_code: this.dest_distributor_code,
                clear_date: this.clear_date,
                msg_no: this.msg_no,
                trans_time: this.trans_time,
                device_info: this.device_info,
                uid: this.uid,
                client_id: this.client_id
            };
        }

        readFromObject(json: TFundRedeemReq.Object) { 
            _hasOwnProperty.call(json, "imei") && (this.imei = json.imei!);
            _hasOwnProperty.call(json, "ip_address") && (this.ip_address = json.ip_address!);
            _hasOwnProperty.call(json, "large_redemption_flag") && (this.large_redemption_flag = json.large_redemption_flag!);
            _hasOwnProperty.call(json, "mac_address") && (this.mac_address = json.mac_address!);
            _hasOwnProperty.call(json, "share_class") && (this.share_class = json.share_class!);
            _hasOwnProperty.call(json, "uuid") && (this.uuid = json.uuid!);
            _hasOwnProperty.call(json, "broker_id") && (this.broker_id = json.broker_id!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "trade_pwd") && (this.trade_pwd = json.trade_pwd!);
            _hasOwnProperty.call(json, "ta_code") && (this.ta_code = json.ta_code!);
            _hasOwnProperty.call(json, "ta_account") && (this.ta_account = json.ta_account!);
            _hasOwnProperty.call(json, "trade_account") && (this.trade_account = json.trade_account!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "inst_id") && (this.inst_id = json.inst_id!);
            _hasOwnProperty.call(json, "redeem_unit") && (this.redeem_unit = json.redeem_unit!);
            _hasOwnProperty.call(json, "dest_distributor_code") && (this.dest_distributor_code = json.dest_distributor_code!);
            _hasOwnProperty.call(json, "clear_date") && (this.clear_date = json.clear_date!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "trans_time") && (this.trans_time = json.trans_time!);
            _hasOwnProperty.call(json, "device_info") && (this.device_info = json.device_info!);
            _hasOwnProperty.call(json, "uid") && (this.uid = json.uid!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundRedeemReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundRedeemReq._readFrom(is);
        }
    }

    export namespace TFundRedeemReq {
        export interface Object {
            imei?: string;
            ip_address?: string;
            large_redemption_flag?: number;
            mac_address?: string;
            share_class?: string;
            uuid?: string;
            broker_id?: number;
            account_id?: string;
            trade_pwd?: string;
            ta_code?: string;
            ta_account?: string;
            trade_account?: string;
            order_list_id?: string;
            inst_id?: string;
            redeem_unit?: number;
            dest_distributor_code?: string;
            clear_date?: string;
            msg_no?: string;
            trans_time?: string;
            device_info?: string;
            uid?: string;
            client_id?: string;
        }
    }

    export class TFundRedeemRsp {
        original_code: number = 0;
        msg: string = "";
        msg_no: string = "";
        order_list_id: string = "";
        busi_timestamp: string = "";
        busi_list_id: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundRedeemRsp";
        protected static _classname = "JV.TFundRedeemRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundRedeemRsp;
            tmp.original_code = is.readInt32(0, false, 0);
            tmp.msg = is.readString(1, false, "");
            tmp.msg_no = is.readString(2, false, "");
            tmp.order_list_id = is.readString(3, false, "");
            tmp.busi_timestamp = is.readString(4, false, "");
            tmp.busi_list_id = is.readString(5, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.original_code);
            os.writeString(1, this.msg);
            os.writeString(2, this.msg_no);
            os.writeString(3, this.order_list_id);
            os.writeString(4, this.busi_timestamp);
            os.writeString(5, this.busi_list_id);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundRedeemRsp.Object { 
            return {
                original_code: this.original_code,
                msg: this.msg,
                msg_no: this.msg_no,
                order_list_id: this.order_list_id,
                busi_timestamp: this.busi_timestamp,
                busi_list_id: this.busi_list_id
            };
        }

        readFromObject(json: TFundRedeemRsp.Object) { 
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "busi_timestamp") && (this.busi_timestamp = json.busi_timestamp!);
            _hasOwnProperty.call(json, "busi_list_id") && (this.busi_list_id = json.busi_list_id!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundRedeemRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundRedeemRsp._readFrom(is);
        }
    }

    export namespace TFundRedeemRsp {
        export interface Object {
            original_code?: number;
            msg?: string;
            msg_no?: string;
            order_list_id?: string;
            busi_timestamp?: string;
            busi_list_id?: string;
        }
    }

    export class TFundBuyQueryReq {
        order_list_id: string = "";
        busi_list_id: string = "";
        distributor_code: string = "";
        broker_id: number = 0;
        account_id: string = "";
        msg_no: string = "";
        device_info: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundBuyQueryReq";
        protected static _classname = "JV.TFundBuyQueryReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundBuyQueryReq;
            tmp.order_list_id = is.readString(0, false, "");
            tmp.busi_list_id = is.readString(1, false, "");
            tmp.distributor_code = is.readString(2, false, "");
            tmp.broker_id = is.readInt32(3, false, 0);
            tmp.account_id = is.readString(4, false, "");
            tmp.msg_no = is.readString(5, false, "");
            tmp.device_info = is.readString(6, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.order_list_id);
            os.writeString(1, this.busi_list_id);
            os.writeString(2, this.distributor_code);
            os.writeInt32(3, this.broker_id);
            os.writeString(4, this.account_id);
            os.writeString(5, this.msg_no);
            os.writeString(6, this.device_info);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundBuyQueryReq.Object { 
            return {
                order_list_id: this.order_list_id,
                busi_list_id: this.busi_list_id,
                distributor_code: this.distributor_code,
                broker_id: this.broker_id,
                account_id: this.account_id,
                msg_no: this.msg_no,
                device_info: this.device_info
            };
        }

        readFromObject(json: TFundBuyQueryReq.Object) { 
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "busi_list_id") && (this.busi_list_id = json.busi_list_id!);
            _hasOwnProperty.call(json, "distributor_code") && (this.distributor_code = json.distributor_code!);
            _hasOwnProperty.call(json, "broker_id") && (this.broker_id = json.broker_id!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "device_info") && (this.device_info = json.device_info!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundBuyQueryReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundBuyQueryReq._readFrom(is);
        }
    }

    export namespace TFundBuyQueryReq {
        export interface Object {
            order_list_id?: string;
            busi_list_id?: string;
            distributor_code?: string;
            broker_id?: number;
            account_id?: string;
            msg_no?: string;
            device_info?: string;
        }
    }

    export class TFundBuyQueryRsp {
        busi_list_id: string = "";
        order_list_id: string = "";
        order_state: number = 0;
        broker_id: number = 0;
        large_redemption_flag: number = 0;
        discount_rate_of_commission: number = 0;
        share_class: string = "";
        ta_account: string = "";
        trade_account: string = "";
        inst_id: string = "";
        trade_type: number = 0;
        trade_amt: number = 0;
        trade_unit: number = 0;
        account_id: string = "";
        ta_code: string = "";
        froze_amt: number = 0;
        unfroze_amt: number = 0;
        froze_unit: number = 0;
        unfroze_unit: number = 0;
        cancel_flag: number = 0;
        can_cancel: number = 0;
        original_code: number = 0;
        msg: string = "";
        msg_no: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundBuyQueryRsp";
        protected static _classname = "JV.TFundBuyQueryRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundBuyQueryRsp;
            tmp.busi_list_id = is.readString(0, false, "");
            tmp.order_list_id = is.readString(1, false, "");
            tmp.order_state = is.readInt32(2, false, 0);
            tmp.broker_id = is.readInt32(3, false, 0);
            tmp.large_redemption_flag = is.readInt32(4, false, 0);
            tmp.discount_rate_of_commission = is.readDouble(5, false, 0);
            tmp.share_class = is.readString(6, false, "");
            tmp.ta_account = is.readString(7, false, "");
            tmp.trade_account = is.readString(8, false, "");
            tmp.inst_id = is.readString(9, false, "");
            tmp.trade_type = is.readInt32(10, false, 0);
            tmp.trade_amt = is.readDouble(11, false, 0);
            tmp.trade_unit = is.readDouble(12, false, 0);
            tmp.account_id = is.readString(13, false, "");
            tmp.ta_code = is.readString(14, false, "");
            tmp.froze_amt = is.readDouble(15, false, 0);
            tmp.unfroze_amt = is.readDouble(16, false, 0);
            tmp.froze_unit = is.readDouble(17, false, 0);
            tmp.unfroze_unit = is.readDouble(18, false, 0);
            tmp.cancel_flag = is.readInt32(19, false, 0);
            tmp.can_cancel = is.readInt32(20, false, 0);
            tmp.original_code = is.readInt32(21, false, 0);
            tmp.msg = is.readString(22, false, "");
            tmp.msg_no = is.readString(23, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.busi_list_id);
            os.writeString(1, this.order_list_id);
            os.writeInt32(2, this.order_state);
            os.writeInt32(3, this.broker_id);
            os.writeInt32(4, this.large_redemption_flag);
            os.writeDouble(5, this.discount_rate_of_commission);
            os.writeString(6, this.share_class);
            os.writeString(7, this.ta_account);
            os.writeString(8, this.trade_account);
            os.writeString(9, this.inst_id);
            os.writeInt32(10, this.trade_type);
            os.writeDouble(11, this.trade_amt);
            os.writeDouble(12, this.trade_unit);
            os.writeString(13, this.account_id);
            os.writeString(14, this.ta_code);
            os.writeDouble(15, this.froze_amt);
            os.writeDouble(16, this.unfroze_amt);
            os.writeDouble(17, this.froze_unit);
            os.writeDouble(18, this.unfroze_unit);
            os.writeInt32(19, this.cancel_flag);
            os.writeInt32(20, this.can_cancel);
            os.writeInt32(21, this.original_code);
            os.writeString(22, this.msg);
            os.writeString(23, this.msg_no);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundBuyQueryRsp.Object { 
            return {
                busi_list_id: this.busi_list_id,
                order_list_id: this.order_list_id,
                order_state: this.order_state,
                broker_id: this.broker_id,
                large_redemption_flag: this.large_redemption_flag,
                discount_rate_of_commission: this.discount_rate_of_commission,
                share_class: this.share_class,
                ta_account: this.ta_account,
                trade_account: this.trade_account,
                inst_id: this.inst_id,
                trade_type: this.trade_type,
                trade_amt: this.trade_amt,
                trade_unit: this.trade_unit,
                account_id: this.account_id,
                ta_code: this.ta_code,
                froze_amt: this.froze_amt,
                unfroze_amt: this.unfroze_amt,
                froze_unit: this.froze_unit,
                unfroze_unit: this.unfroze_unit,
                cancel_flag: this.cancel_flag,
                can_cancel: this.can_cancel,
                original_code: this.original_code,
                msg: this.msg,
                msg_no: this.msg_no
            };
        }

        readFromObject(json: TFundBuyQueryRsp.Object) { 
            _hasOwnProperty.call(json, "busi_list_id") && (this.busi_list_id = json.busi_list_id!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "order_state") && (this.order_state = json.order_state!);
            _hasOwnProperty.call(json, "broker_id") && (this.broker_id = json.broker_id!);
            _hasOwnProperty.call(json, "large_redemption_flag") && (this.large_redemption_flag = json.large_redemption_flag!);
            _hasOwnProperty.call(json, "discount_rate_of_commission") && (this.discount_rate_of_commission = json.discount_rate_of_commission!);
            _hasOwnProperty.call(json, "share_class") && (this.share_class = json.share_class!);
            _hasOwnProperty.call(json, "ta_account") && (this.ta_account = json.ta_account!);
            _hasOwnProperty.call(json, "trade_account") && (this.trade_account = json.trade_account!);
            _hasOwnProperty.call(json, "inst_id") && (this.inst_id = json.inst_id!);
            _hasOwnProperty.call(json, "trade_type") && (this.trade_type = json.trade_type!);
            _hasOwnProperty.call(json, "trade_amt") && (this.trade_amt = json.trade_amt!);
            _hasOwnProperty.call(json, "trade_unit") && (this.trade_unit = json.trade_unit!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "ta_code") && (this.ta_code = json.ta_code!);
            _hasOwnProperty.call(json, "froze_amt") && (this.froze_amt = json.froze_amt!);
            _hasOwnProperty.call(json, "unfroze_amt") && (this.unfroze_amt = json.unfroze_amt!);
            _hasOwnProperty.call(json, "froze_unit") && (this.froze_unit = json.froze_unit!);
            _hasOwnProperty.call(json, "unfroze_unit") && (this.unfroze_unit = json.unfroze_unit!);
            _hasOwnProperty.call(json, "cancel_flag") && (this.cancel_flag = json.cancel_flag!);
            _hasOwnProperty.call(json, "can_cancel") && (this.can_cancel = json.can_cancel!);
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundBuyQueryRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundBuyQueryRsp._readFrom(is);
        }
    }

    export namespace TFundBuyQueryRsp {
        export interface Object {
            busi_list_id?: string;
            order_list_id?: string;
            order_state?: number;
            broker_id?: number;
            large_redemption_flag?: number;
            discount_rate_of_commission?: number;
            share_class?: string;
            ta_account?: string;
            trade_account?: string;
            inst_id?: string;
            trade_type?: number;
            trade_amt?: number;
            trade_unit?: number;
            account_id?: string;
            ta_code?: string;
            froze_amt?: number;
            unfroze_amt?: number;
            froze_unit?: number;
            unfroze_unit?: number;
            cancel_flag?: number;
            can_cancel?: number;
            original_code?: number;
            msg?: string;
            msg_no?: string;
        }
    }

    export class TFundBuyQueryByDurationReq {
        uid: string = "";
        client_id: string = "";
        account_id: string = "";
        trade_account: string = "";
        bgn_date: string = "";
        end_date: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundBuyQueryByDurationReq";
        protected static _classname = "JV.TFundBuyQueryByDurationReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundBuyQueryByDurationReq;
            tmp.uid = is.readString(0, false, "");
            tmp.client_id = is.readString(1, false, "");
            tmp.account_id = is.readString(2, false, "");
            tmp.trade_account = is.readString(3, false, "");
            tmp.bgn_date = is.readString(4, false, "");
            tmp.end_date = is.readString(5, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.uid);
            os.writeString(1, this.client_id);
            os.writeString(2, this.account_id);
            os.writeString(3, this.trade_account);
            os.writeString(4, this.bgn_date);
            os.writeString(5, this.end_date);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundBuyQueryByDurationReq.Object { 
            return {
                uid: this.uid,
                client_id: this.client_id,
                account_id: this.account_id,
                trade_account: this.trade_account,
                bgn_date: this.bgn_date,
                end_date: this.end_date
            };
        }

        readFromObject(json: TFundBuyQueryByDurationReq.Object) { 
            _hasOwnProperty.call(json, "uid") && (this.uid = json.uid!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "trade_account") && (this.trade_account = json.trade_account!);
            _hasOwnProperty.call(json, "bgn_date") && (this.bgn_date = json.bgn_date!);
            _hasOwnProperty.call(json, "end_date") && (this.end_date = json.end_date!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundBuyQueryByDurationReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundBuyQueryByDurationReq._readFrom(is);
        }
    }

    export namespace TFundBuyQueryByDurationReq {
        export interface Object {
            uid?: string;
            client_id?: string;
            account_id?: string;
            trade_account?: string;
            bgn_date?: string;
            end_date?: string;
        }
    }

    export class TFundBuyQueryByDurationItem {
        trd_date: string = "";
        occur_date: string = "";
        order_status: string = "";
        trd_id: string = "";
        account_id: string = "";
        busi_list_id: string = "";
        app_sn: string = "";
        ta_code: string = "";
        ta_account: string = "";
        fund_code: string = "";
        share_class: string = "";
        order_vol: number = 0;
        order_amt: number = 0;
        div_method: number = 0;
        order_frz_amt: number = 0;
        cfm_date: string = "";
        matched_amt: number = 0;
        matched_vol: number = 0;
        nav: number = 0;
        cfm_sn: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundBuyQueryByDurationItem";
        protected static _classname = "JV.TFundBuyQueryByDurationItem";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundBuyQueryByDurationItem;
            tmp.trd_date = is.readString(0, false, "");
            tmp.occur_date = is.readString(1, false, "");
            tmp.order_status = is.readString(2, false, "");
            tmp.trd_id = is.readString(3, false, "");
            tmp.account_id = is.readString(4, false, "");
            tmp.busi_list_id = is.readString(5, false, "");
            tmp.app_sn = is.readString(6, false, "");
            tmp.ta_code = is.readString(7, false, "");
            tmp.ta_account = is.readString(8, false, "");
            tmp.fund_code = is.readString(9, false, "");
            tmp.share_class = is.readString(10, false, "");
            tmp.order_vol = is.readDouble(11, false, 0);
            tmp.order_amt = is.readDouble(12, false, 0);
            tmp.div_method = is.readInt32(13, false, 0);
            tmp.order_frz_amt = is.readDouble(14, false, 0);
            tmp.cfm_date = is.readString(15, false, "");
            tmp.matched_amt = is.readDouble(16, false, 0);
            tmp.matched_vol = is.readDouble(17, false, 0);
            tmp.nav = is.readDouble(18, false, 0);
            tmp.cfm_sn = is.readString(19, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.trd_date);
            os.writeString(1, this.occur_date);
            os.writeString(2, this.order_status);
            os.writeString(3, this.trd_id);
            os.writeString(4, this.account_id);
            os.writeString(5, this.busi_list_id);
            os.writeString(6, this.app_sn);
            os.writeString(7, this.ta_code);
            os.writeString(8, this.ta_account);
            os.writeString(9, this.fund_code);
            os.writeString(10, this.share_class);
            os.writeDouble(11, this.order_vol);
            os.writeDouble(12, this.order_amt);
            os.writeInt32(13, this.div_method);
            os.writeDouble(14, this.order_frz_amt);
            os.writeString(15, this.cfm_date);
            os.writeDouble(16, this.matched_amt);
            os.writeDouble(17, this.matched_vol);
            os.writeDouble(18, this.nav);
            os.writeString(19, this.cfm_sn);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundBuyQueryByDurationItem.Object { 
            return {
                trd_date: this.trd_date,
                occur_date: this.occur_date,
                order_status: this.order_status,
                trd_id: this.trd_id,
                account_id: this.account_id,
                busi_list_id: this.busi_list_id,
                app_sn: this.app_sn,
                ta_code: this.ta_code,
                ta_account: this.ta_account,
                fund_code: this.fund_code,
                share_class: this.share_class,
                order_vol: this.order_vol,
                order_amt: this.order_amt,
                div_method: this.div_method,
                order_frz_amt: this.order_frz_amt,
                cfm_date: this.cfm_date,
                matched_amt: this.matched_amt,
                matched_vol: this.matched_vol,
                nav: this.nav,
                cfm_sn: this.cfm_sn
            };
        }

        readFromObject(json: TFundBuyQueryByDurationItem.Object) { 
            _hasOwnProperty.call(json, "trd_date") && (this.trd_date = json.trd_date!);
            _hasOwnProperty.call(json, "occur_date") && (this.occur_date = json.occur_date!);
            _hasOwnProperty.call(json, "order_status") && (this.order_status = json.order_status!);
            _hasOwnProperty.call(json, "trd_id") && (this.trd_id = json.trd_id!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "busi_list_id") && (this.busi_list_id = json.busi_list_id!);
            _hasOwnProperty.call(json, "app_sn") && (this.app_sn = json.app_sn!);
            _hasOwnProperty.call(json, "ta_code") && (this.ta_code = json.ta_code!);
            _hasOwnProperty.call(json, "ta_account") && (this.ta_account = json.ta_account!);
            _hasOwnProperty.call(json, "fund_code") && (this.fund_code = json.fund_code!);
            _hasOwnProperty.call(json, "share_class") && (this.share_class = json.share_class!);
            _hasOwnProperty.call(json, "order_vol") && (this.order_vol = json.order_vol!);
            _hasOwnProperty.call(json, "order_amt") && (this.order_amt = json.order_amt!);
            _hasOwnProperty.call(json, "div_method") && (this.div_method = json.div_method!);
            _hasOwnProperty.call(json, "order_frz_amt") && (this.order_frz_amt = json.order_frz_amt!);
            _hasOwnProperty.call(json, "cfm_date") && (this.cfm_date = json.cfm_date!);
            _hasOwnProperty.call(json, "matched_amt") && (this.matched_amt = json.matched_amt!);
            _hasOwnProperty.call(json, "matched_vol") && (this.matched_vol = json.matched_vol!);
            _hasOwnProperty.call(json, "nav") && (this.nav = json.nav!);
            _hasOwnProperty.call(json, "cfm_sn") && (this.cfm_sn = json.cfm_sn!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundBuyQueryByDurationItem();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundBuyQueryByDurationItem._readFrom(is);
        }
    }

    export namespace TFundBuyQueryByDurationItem {
        export interface Object {
            trd_date?: string;
            occur_date?: string;
            order_status?: string;
            trd_id?: string;
            account_id?: string;
            busi_list_id?: string;
            app_sn?: string;
            ta_code?: string;
            ta_account?: string;
            fund_code?: string;
            share_class?: string;
            order_vol?: number;
            order_amt?: number;
            div_method?: number;
            order_frz_amt?: number;
            cfm_date?: string;
            matched_amt?: number;
            matched_vol?: number;
            nav?: number;
            cfm_sn?: string;
        }
    }

    export class TFundBuyQueryByDurationRsp {
        msg_code: string = "";
        msg_text: string = "";
        total: number = 0;
        item_list: TarsStream.List<JV.TFundBuyQueryByDurationItem> = new TarsStream.List(JV.TFundBuyQueryByDurationItem);

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundBuyQueryByDurationRsp";
        protected static _classname = "JV.TFundBuyQueryByDurationRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundBuyQueryByDurationRsp;
            tmp.msg_code = is.readString(0, false, "");
            tmp.msg_text = is.readString(1, false, "");
            tmp.total = is.readInt32(2, false, 0);
            tmp.item_list = is.readList(3, false, TarsStream.List(JV.TFundBuyQueryByDurationItem));
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.msg_code);
            os.writeString(1, this.msg_text);
            os.writeInt32(2, this.total);
            os.writeList(3, this.item_list);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundBuyQueryByDurationRsp.Object { 
            return {
                msg_code: this.msg_code,
                msg_text: this.msg_text,
                total: this.total,
                item_list: this.item_list.toObject()
            };
        }

        readFromObject(json: TFundBuyQueryByDurationRsp.Object) { 
            _hasOwnProperty.call(json, "msg_code") && (this.msg_code = json.msg_code!);
            _hasOwnProperty.call(json, "msg_text") && (this.msg_text = json.msg_text!);
            _hasOwnProperty.call(json, "total") && (this.total = json.total!);
            _hasOwnProperty.call(json, "item_list") && (this.item_list.readFromObject(json.item_list!));
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundBuyQueryByDurationRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundBuyQueryByDurationRsp._readFrom(is);
        }
    }

    export namespace TFundBuyQueryByDurationRsp {
        export interface Object {
            msg_code?: string;
            msg_text?: string;
            total?: number;
            item_list?: Array<JV.TFundBuyQueryByDurationItem.Object>;
        }
    }

    export class TFundHoldingsQueryReq {
        uid: string = "";
        client_id: string = "";
        account_id: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundHoldingsQueryReq";
        protected static _classname = "JV.TFundHoldingsQueryReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundHoldingsQueryReq;
            tmp.uid = is.readString(0, false, "");
            tmp.client_id = is.readString(1, false, "");
            tmp.account_id = is.readString(2, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.uid);
            os.writeString(1, this.client_id);
            os.writeString(2, this.account_id);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundHoldingsQueryReq.Object { 
            return {
                uid: this.uid,
                client_id: this.client_id,
                account_id: this.account_id
            };
        }

        readFromObject(json: TFundHoldingsQueryReq.Object) { 
            _hasOwnProperty.call(json, "uid") && (this.uid = json.uid!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundHoldingsQueryReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundHoldingsQueryReq._readFrom(is);
        }
    }

    export namespace TFundHoldingsQueryReq {
        export interface Object {
            uid?: string;
            client_id?: string;
            account_id?: string;
        }
    }

    export class TFundHoldingsQueryRspItem {
        account_id: string = "";
        ta_account: string = "";
        ta_code: string = "";
        fund_code: string = "";
        share_class: string = "";
        div_method: number = 0;
        fund_bln: number = 0;
        fund_avl: number = 0;
        fund_trd_frz: number = 0;
        fund_frz: number = 0;
        current_cost2: number = 0;
        mkt_val: number = 0;

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundHoldingsQueryRspItem";
        protected static _classname = "JV.TFundHoldingsQueryRspItem";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundHoldingsQueryRspItem;
            tmp.account_id = is.readString(0, false, "");
            tmp.ta_account = is.readString(1, false, "");
            tmp.ta_code = is.readString(2, false, "");
            tmp.fund_code = is.readString(3, false, "");
            tmp.share_class = is.readString(4, false, "");
            tmp.div_method = is.readInt32(5, false, 0);
            tmp.fund_bln = is.readDouble(6, false, 0);
            tmp.fund_avl = is.readDouble(7, false, 0);
            tmp.fund_trd_frz = is.readDouble(8, false, 0);
            tmp.fund_frz = is.readDouble(9, false, 0);
            tmp.current_cost2 = is.readDouble(10, false, 0);
            tmp.mkt_val = is.readDouble(11, false, 0);
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.account_id);
            os.writeString(1, this.ta_account);
            os.writeString(2, this.ta_code);
            os.writeString(3, this.fund_code);
            os.writeString(4, this.share_class);
            os.writeInt32(5, this.div_method);
            os.writeDouble(6, this.fund_bln);
            os.writeDouble(7, this.fund_avl);
            os.writeDouble(8, this.fund_trd_frz);
            os.writeDouble(9, this.fund_frz);
            os.writeDouble(10, this.current_cost2);
            os.writeDouble(11, this.mkt_val);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundHoldingsQueryRspItem.Object { 
            return {
                account_id: this.account_id,
                ta_account: this.ta_account,
                ta_code: this.ta_code,
                fund_code: this.fund_code,
                share_class: this.share_class,
                div_method: this.div_method,
                fund_bln: this.fund_bln,
                fund_avl: this.fund_avl,
                fund_trd_frz: this.fund_trd_frz,
                fund_frz: this.fund_frz,
                current_cost2: this.current_cost2,
                mkt_val: this.mkt_val
            };
        }

        readFromObject(json: TFundHoldingsQueryRspItem.Object) { 
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "ta_account") && (this.ta_account = json.ta_account!);
            _hasOwnProperty.call(json, "ta_code") && (this.ta_code = json.ta_code!);
            _hasOwnProperty.call(json, "fund_code") && (this.fund_code = json.fund_code!);
            _hasOwnProperty.call(json, "share_class") && (this.share_class = json.share_class!);
            _hasOwnProperty.call(json, "div_method") && (this.div_method = json.div_method!);
            _hasOwnProperty.call(json, "fund_bln") && (this.fund_bln = json.fund_bln!);
            _hasOwnProperty.call(json, "fund_avl") && (this.fund_avl = json.fund_avl!);
            _hasOwnProperty.call(json, "fund_trd_frz") && (this.fund_trd_frz = json.fund_trd_frz!);
            _hasOwnProperty.call(json, "fund_frz") && (this.fund_frz = json.fund_frz!);
            _hasOwnProperty.call(json, "current_cost2") && (this.current_cost2 = json.current_cost2!);
            _hasOwnProperty.call(json, "mkt_val") && (this.mkt_val = json.mkt_val!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundHoldingsQueryRspItem();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundHoldingsQueryRspItem._readFrom(is);
        }
    }

    export namespace TFundHoldingsQueryRspItem {
        export interface Object {
            account_id?: string;
            ta_account?: string;
            ta_code?: string;
            fund_code?: string;
            share_class?: string;
            div_method?: number;
            fund_bln?: number;
            fund_avl?: number;
            fund_trd_frz?: number;
            fund_frz?: number;
            current_cost2?: number;
            mkt_val?: number;
        }
    }

    export class TFundHoldingsQueryRsp {
        msg_code: string = "";
        msg_text: string = "";
        total: number = 0;
        item_list: TarsStream.List<JV.TFundHoldingsQueryRspItem> = new TarsStream.List(JV.TFundHoldingsQueryRspItem);

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundHoldingsQueryRsp";
        protected static _classname = "JV.TFundHoldingsQueryRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundHoldingsQueryRsp;
            tmp.msg_code = is.readString(0, false, "");
            tmp.msg_text = is.readString(1, false, "");
            tmp.total = is.readInt32(2, false, 0);
            tmp.item_list = is.readList(3, false, TarsStream.List(JV.TFundHoldingsQueryRspItem));
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.msg_code);
            os.writeString(1, this.msg_text);
            os.writeInt32(2, this.total);
            os.writeList(3, this.item_list);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundHoldingsQueryRsp.Object { 
            return {
                msg_code: this.msg_code,
                msg_text: this.msg_text,
                total: this.total,
                item_list: this.item_list.toObject()
            };
        }

        readFromObject(json: TFundHoldingsQueryRsp.Object) { 
            _hasOwnProperty.call(json, "msg_code") && (this.msg_code = json.msg_code!);
            _hasOwnProperty.call(json, "msg_text") && (this.msg_text = json.msg_text!);
            _hasOwnProperty.call(json, "total") && (this.total = json.total!);
            _hasOwnProperty.call(json, "item_list") && (this.item_list.readFromObject(json.item_list!));
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundHoldingsQueryRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundHoldingsQueryRsp._readFrom(is);
        }
    }

    export namespace TFundHoldingsQueryRsp {
        export interface Object {
            msg_code?: string;
            msg_text?: string;
            total?: number;
            item_list?: Array<JV.TFundHoldingsQueryRspItem.Object>;
        }
    }

    export class TFundBuyCancelReq {
        account_id: string = "";
        to_cancel_busi_list_id: string = "";
        order_list_id: string = "";
        msg_no: string = "";
        trade_pwd: string = "";
        broker_id: number = 0;
        device_info: string = "";
        uid: string = "";
        client_id: string = "";
        trade_account: string = "";
        ta_code: string = "";
        fund_code: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundBuyCancelReq";
        protected static _classname = "JV.TFundBuyCancelReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundBuyCancelReq;
            tmp.account_id = is.readString(0, false, "");
            tmp.to_cancel_busi_list_id = is.readString(1, false, "");
            tmp.order_list_id = is.readString(2, false, "");
            tmp.msg_no = is.readString(3, false, "");
            tmp.trade_pwd = is.readString(4, false, "");
            tmp.broker_id = is.readInt32(5, false, 0);
            tmp.device_info = is.readString(6, false, "");
            tmp.uid = is.readString(7, false, "");
            tmp.client_id = is.readString(8, false, "");
            tmp.trade_account = is.readString(9, false, "");
            tmp.ta_code = is.readString(10, false, "");
            tmp.fund_code = is.readString(11, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.account_id);
            os.writeString(1, this.to_cancel_busi_list_id);
            os.writeString(2, this.order_list_id);
            os.writeString(3, this.msg_no);
            os.writeString(4, this.trade_pwd);
            os.writeInt32(5, this.broker_id);
            os.writeString(6, this.device_info);
            os.writeString(7, this.uid);
            os.writeString(8, this.client_id);
            os.writeString(9, this.trade_account);
            os.writeString(10, this.ta_code);
            os.writeString(11, this.fund_code);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundBuyCancelReq.Object { 
            return {
                account_id: this.account_id,
                to_cancel_busi_list_id: this.to_cancel_busi_list_id,
                order_list_id: this.order_list_id,
                msg_no: this.msg_no,
                trade_pwd: this.trade_pwd,
                broker_id: this.broker_id,
                device_info: this.device_info,
                uid: this.uid,
                client_id: this.client_id,
                trade_account: this.trade_account,
                ta_code: this.ta_code,
                fund_code: this.fund_code
            };
        }

        readFromObject(json: TFundBuyCancelReq.Object) { 
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "to_cancel_busi_list_id") && (this.to_cancel_busi_list_id = json.to_cancel_busi_list_id!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "trade_pwd") && (this.trade_pwd = json.trade_pwd!);
            _hasOwnProperty.call(json, "broker_id") && (this.broker_id = json.broker_id!);
            _hasOwnProperty.call(json, "device_info") && (this.device_info = json.device_info!);
            _hasOwnProperty.call(json, "uid") && (this.uid = json.uid!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "trade_account") && (this.trade_account = json.trade_account!);
            _hasOwnProperty.call(json, "ta_code") && (this.ta_code = json.ta_code!);
            _hasOwnProperty.call(json, "fund_code") && (this.fund_code = json.fund_code!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundBuyCancelReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundBuyCancelReq._readFrom(is);
        }
    }

    export namespace TFundBuyCancelReq {
        export interface Object {
            account_id?: string;
            to_cancel_busi_list_id?: string;
            order_list_id?: string;
            msg_no?: string;
            trade_pwd?: string;
            broker_id?: number;
            device_info?: string;
            uid?: string;
            client_id?: string;
            trade_account?: string;
            ta_code?: string;
            fund_code?: string;
        }
    }

    export class TFundBuyCancelRsp {
        order_list_id: string = "";
        busi_timestamp: string = "";
        to_cancel_busi_list_id: string = "";
        unfroze_amt: number = 0;
        msg_no: string = "";
        original_code: number = 0;
        msg: string = "";
        busi_list_id: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundBuyCancelRsp";
        protected static _classname = "JV.TFundBuyCancelRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundBuyCancelRsp;
            tmp.order_list_id = is.readString(0, false, "");
            tmp.busi_timestamp = is.readString(1, false, "");
            tmp.to_cancel_busi_list_id = is.readString(2, false, "");
            tmp.unfroze_amt = is.readDouble(3, false, 0);
            tmp.msg_no = is.readString(4, false, "");
            tmp.original_code = is.readInt32(5, false, 0);
            tmp.msg = is.readString(6, false, "");
            tmp.busi_list_id = is.readString(7, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.order_list_id);
            os.writeString(1, this.busi_timestamp);
            os.writeString(2, this.to_cancel_busi_list_id);
            os.writeDouble(3, this.unfroze_amt);
            os.writeString(4, this.msg_no);
            os.writeInt32(5, this.original_code);
            os.writeString(6, this.msg);
            os.writeString(7, this.busi_list_id);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundBuyCancelRsp.Object { 
            return {
                order_list_id: this.order_list_id,
                busi_timestamp: this.busi_timestamp,
                to_cancel_busi_list_id: this.to_cancel_busi_list_id,
                unfroze_amt: this.unfroze_amt,
                msg_no: this.msg_no,
                original_code: this.original_code,
                msg: this.msg,
                busi_list_id: this.busi_list_id
            };
        }

        readFromObject(json: TFundBuyCancelRsp.Object) { 
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "busi_timestamp") && (this.busi_timestamp = json.busi_timestamp!);
            _hasOwnProperty.call(json, "to_cancel_busi_list_id") && (this.to_cancel_busi_list_id = json.to_cancel_busi_list_id!);
            _hasOwnProperty.call(json, "unfroze_amt") && (this.unfroze_amt = json.unfroze_amt!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            _hasOwnProperty.call(json, "busi_list_id") && (this.busi_list_id = json.busi_list_id!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundBuyCancelRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundBuyCancelRsp._readFrom(is);
        }
    }

    export namespace TFundBuyCancelRsp {
        export interface Object {
            order_list_id?: string;
            busi_timestamp?: string;
            to_cancel_busi_list_id?: string;
            unfroze_amt?: number;
            msg_no?: string;
            original_code?: number;
            msg?: string;
            busi_list_id?: string;
        }
    }

    export class TFundDivSetReq {
        distributor_code: string = "";
        account_id: string = "";
        broker_id: number = 0;
        div_method: number = 0;
        inst_id: string = "";
        order_list_id: string = "";
        share_class: string = "";
        ta_code: string = "";
        ta_account: string = "";
        trade_account: string = "";
        trade_pwd: string = "";
        msg_no: string = "";
        trans_time: string = "";
        device_info: string = "";
        uid: string = "";
        client_id: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundDivSetReq";
        protected static _classname = "JV.TFundDivSetReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundDivSetReq;
            tmp.distributor_code = is.readString(0, false, "");
            tmp.account_id = is.readString(1, false, "");
            tmp.broker_id = is.readInt32(2, false, 0);
            tmp.div_method = is.readInt32(3, false, 0);
            tmp.inst_id = is.readString(4, false, "");
            tmp.order_list_id = is.readString(5, false, "");
            tmp.share_class = is.readString(6, false, "");
            tmp.ta_code = is.readString(7, false, "");
            tmp.ta_account = is.readString(8, false, "");
            tmp.trade_account = is.readString(9, false, "");
            tmp.trade_pwd = is.readString(10, false, "");
            tmp.msg_no = is.readString(11, false, "");
            tmp.trans_time = is.readString(12, false, "");
            tmp.device_info = is.readString(13, false, "");
            tmp.uid = is.readString(14, false, "");
            tmp.client_id = is.readString(15, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.distributor_code);
            os.writeString(1, this.account_id);
            os.writeInt32(2, this.broker_id);
            os.writeInt32(3, this.div_method);
            os.writeString(4, this.inst_id);
            os.writeString(5, this.order_list_id);
            os.writeString(6, this.share_class);
            os.writeString(7, this.ta_code);
            os.writeString(8, this.ta_account);
            os.writeString(9, this.trade_account);
            os.writeString(10, this.trade_pwd);
            os.writeString(11, this.msg_no);
            os.writeString(12, this.trans_time);
            os.writeString(13, this.device_info);
            os.writeString(14, this.uid);
            os.writeString(15, this.client_id);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundDivSetReq.Object { 
            return {
                distributor_code: this.distributor_code,
                account_id: this.account_id,
                broker_id: this.broker_id,
                div_method: this.div_method,
                inst_id: this.inst_id,
                order_list_id: this.order_list_id,
                share_class: this.share_class,
                ta_code: this.ta_code,
                ta_account: this.ta_account,
                trade_account: this.trade_account,
                trade_pwd: this.trade_pwd,
                msg_no: this.msg_no,
                trans_time: this.trans_time,
                device_info: this.device_info,
                uid: this.uid,
                client_id: this.client_id
            };
        }

        readFromObject(json: TFundDivSetReq.Object) { 
            _hasOwnProperty.call(json, "distributor_code") && (this.distributor_code = json.distributor_code!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "broker_id") && (this.broker_id = json.broker_id!);
            _hasOwnProperty.call(json, "div_method") && (this.div_method = json.div_method!);
            _hasOwnProperty.call(json, "inst_id") && (this.inst_id = json.inst_id!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "share_class") && (this.share_class = json.share_class!);
            _hasOwnProperty.call(json, "ta_code") && (this.ta_code = json.ta_code!);
            _hasOwnProperty.call(json, "ta_account") && (this.ta_account = json.ta_account!);
            _hasOwnProperty.call(json, "trade_account") && (this.trade_account = json.trade_account!);
            _hasOwnProperty.call(json, "trade_pwd") && (this.trade_pwd = json.trade_pwd!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "trans_time") && (this.trans_time = json.trans_time!);
            _hasOwnProperty.call(json, "device_info") && (this.device_info = json.device_info!);
            _hasOwnProperty.call(json, "uid") && (this.uid = json.uid!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundDivSetReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundDivSetReq._readFrom(is);
        }
    }

    export namespace TFundDivSetReq {
        export interface Object {
            distributor_code?: string;
            account_id?: string;
            broker_id?: number;
            div_method?: number;
            inst_id?: string;
            order_list_id?: string;
            share_class?: string;
            ta_code?: string;
            ta_account?: string;
            trade_account?: string;
            trade_pwd?: string;
            msg_no?: string;
            trans_time?: string;
            device_info?: string;
            uid?: string;
            client_id?: string;
        }
    }

    export class TFundDivSetRsp {
        busi_list_id: string = "";
        order_list_id: string = "";
        busi_timestamp: string = "";
        msg_no: string = "";
        msg: string = "";
        original_code: number = 0;

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TFundDivSetRsp";
        protected static _classname = "JV.TFundDivSetRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TFundDivSetRsp;
            tmp.busi_list_id = is.readString(0, false, "");
            tmp.order_list_id = is.readString(1, false, "");
            tmp.busi_timestamp = is.readString(2, false, "");
            tmp.msg_no = is.readString(3, false, "");
            tmp.msg = is.readString(4, false, "");
            tmp.original_code = is.readInt32(5, false, 0);
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.busi_list_id);
            os.writeString(1, this.order_list_id);
            os.writeString(2, this.busi_timestamp);
            os.writeString(3, this.msg_no);
            os.writeString(4, this.msg);
            os.writeInt32(5, this.original_code);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TFundDivSetRsp.Object { 
            return {
                busi_list_id: this.busi_list_id,
                order_list_id: this.order_list_id,
                busi_timestamp: this.busi_timestamp,
                msg_no: this.msg_no,
                msg: this.msg,
                original_code: this.original_code
            };
        }

        readFromObject(json: TFundDivSetRsp.Object) { 
            _hasOwnProperty.call(json, "busi_list_id") && (this.busi_list_id = json.busi_list_id!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "busi_timestamp") && (this.busi_timestamp = json.busi_timestamp!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TFundDivSetRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TFundDivSetRsp._readFrom(is);
        }
    }

    export namespace TFundDivSetRsp {
        export interface Object {
            busi_list_id?: string;
            order_list_id?: string;
            busi_timestamp?: string;
            msg_no?: string;
            msg?: string;
            original_code?: number;
        }
    }

    export class TOpenTradeAccountReq {
        address: string = "";
        certificate_no: string = "";
        certificate_type: number = 0;
        distributor_code: string = "";
        email_address: string = "";
        imei: string = "";
        investor_name: string = "";
        ip_address: string = "";
        mac_address: string = "";
        mobile_tel_no: string = "";
        post_code: string = "";
        tel_no: string = "";
        trade_pwd: string = "";
        uuid: string = "";
        broker_id: number = 0;
        account_id: string = "";
        ta_code: string = "";
        trade_account: string = "";
        order_list_id: string = "";
        fund_code: string = "";
        create_new: number = 0;
        msg_no: string = "";
        trans_time: string = "";
        device_info: string = "";
        uid: string = "";
        client_id: string = "";
        div_method: number = 0;

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TOpenTradeAccountReq";
        protected static _classname = "JV.TOpenTradeAccountReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TOpenTradeAccountReq;
            tmp.address = is.readString(0, false, "");
            tmp.certificate_no = is.readString(1, false, "");
            tmp.certificate_type = is.readInt32(2, false, 0);
            tmp.distributor_code = is.readString(3, false, "");
            tmp.email_address = is.readString(4, false, "");
            tmp.imei = is.readString(5, false, "");
            tmp.investor_name = is.readString(6, false, "");
            tmp.ip_address = is.readString(7, false, "");
            tmp.mac_address = is.readString(8, false, "");
            tmp.mobile_tel_no = is.readString(9, false, "");
            tmp.post_code = is.readString(10, false, "");
            tmp.tel_no = is.readString(11, false, "");
            tmp.trade_pwd = is.readString(12, false, "");
            tmp.uuid = is.readString(13, false, "");
            tmp.broker_id = is.readInt32(14, false, 0);
            tmp.account_id = is.readString(15, false, "");
            tmp.ta_code = is.readString(16, false, "");
            tmp.trade_account = is.readString(17, false, "");
            tmp.order_list_id = is.readString(18, false, "");
            tmp.fund_code = is.readString(19, false, "");
            tmp.create_new = is.readInt32(20, false, 0);
            tmp.msg_no = is.readString(21, false, "");
            tmp.trans_time = is.readString(22, false, "");
            tmp.device_info = is.readString(23, false, "");
            tmp.uid = is.readString(24, false, "");
            tmp.client_id = is.readString(25, false, "");
            tmp.div_method = is.readInt32(26, false, 0);
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.address);
            os.writeString(1, this.certificate_no);
            os.writeInt32(2, this.certificate_type);
            os.writeString(3, this.distributor_code);
            os.writeString(4, this.email_address);
            os.writeString(5, this.imei);
            os.writeString(6, this.investor_name);
            os.writeString(7, this.ip_address);
            os.writeString(8, this.mac_address);
            os.writeString(9, this.mobile_tel_no);
            os.writeString(10, this.post_code);
            os.writeString(11, this.tel_no);
            os.writeString(12, this.trade_pwd);
            os.writeString(13, this.uuid);
            os.writeInt32(14, this.broker_id);
            os.writeString(15, this.account_id);
            os.writeString(16, this.ta_code);
            os.writeString(17, this.trade_account);
            os.writeString(18, this.order_list_id);
            os.writeString(19, this.fund_code);
            os.writeInt32(20, this.create_new);
            os.writeString(21, this.msg_no);
            os.writeString(22, this.trans_time);
            os.writeString(23, this.device_info);
            os.writeString(24, this.uid);
            os.writeString(25, this.client_id);
            os.writeInt32(26, this.div_method);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TOpenTradeAccountReq.Object { 
            return {
                address: this.address,
                certificate_no: this.certificate_no,
                certificate_type: this.certificate_type,
                distributor_code: this.distributor_code,
                email_address: this.email_address,
                imei: this.imei,
                investor_name: this.investor_name,
                ip_address: this.ip_address,
                mac_address: this.mac_address,
                mobile_tel_no: this.mobile_tel_no,
                post_code: this.post_code,
                tel_no: this.tel_no,
                trade_pwd: this.trade_pwd,
                uuid: this.uuid,
                broker_id: this.broker_id,
                account_id: this.account_id,
                ta_code: this.ta_code,
                trade_account: this.trade_account,
                order_list_id: this.order_list_id,
                fund_code: this.fund_code,
                create_new: this.create_new,
                msg_no: this.msg_no,
                trans_time: this.trans_time,
                device_info: this.device_info,
                uid: this.uid,
                client_id: this.client_id,
                div_method: this.div_method
            };
        }

        readFromObject(json: TOpenTradeAccountReq.Object) { 
            _hasOwnProperty.call(json, "address") && (this.address = json.address!);
            _hasOwnProperty.call(json, "certificate_no") && (this.certificate_no = json.certificate_no!);
            _hasOwnProperty.call(json, "certificate_type") && (this.certificate_type = json.certificate_type!);
            _hasOwnProperty.call(json, "distributor_code") && (this.distributor_code = json.distributor_code!);
            _hasOwnProperty.call(json, "email_address") && (this.email_address = json.email_address!);
            _hasOwnProperty.call(json, "imei") && (this.imei = json.imei!);
            _hasOwnProperty.call(json, "investor_name") && (this.investor_name = json.investor_name!);
            _hasOwnProperty.call(json, "ip_address") && (this.ip_address = json.ip_address!);
            _hasOwnProperty.call(json, "mac_address") && (this.mac_address = json.mac_address!);
            _hasOwnProperty.call(json, "mobile_tel_no") && (this.mobile_tel_no = json.mobile_tel_no!);
            _hasOwnProperty.call(json, "post_code") && (this.post_code = json.post_code!);
            _hasOwnProperty.call(json, "tel_no") && (this.tel_no = json.tel_no!);
            _hasOwnProperty.call(json, "trade_pwd") && (this.trade_pwd = json.trade_pwd!);
            _hasOwnProperty.call(json, "uuid") && (this.uuid = json.uuid!);
            _hasOwnProperty.call(json, "broker_id") && (this.broker_id = json.broker_id!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "ta_code") && (this.ta_code = json.ta_code!);
            _hasOwnProperty.call(json, "trade_account") && (this.trade_account = json.trade_account!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "fund_code") && (this.fund_code = json.fund_code!);
            _hasOwnProperty.call(json, "create_new") && (this.create_new = json.create_new!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "trans_time") && (this.trans_time = json.trans_time!);
            _hasOwnProperty.call(json, "device_info") && (this.device_info = json.device_info!);
            _hasOwnProperty.call(json, "uid") && (this.uid = json.uid!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "div_method") && (this.div_method = json.div_method!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TOpenTradeAccountReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TOpenTradeAccountReq._readFrom(is);
        }
    }

    export namespace TOpenTradeAccountReq {
        export interface Object {
            address?: string;
            certificate_no?: string;
            certificate_type?: number;
            distributor_code?: string;
            email_address?: string;
            imei?: string;
            investor_name?: string;
            ip_address?: string;
            mac_address?: string;
            mobile_tel_no?: string;
            post_code?: string;
            tel_no?: string;
            trade_pwd?: string;
            uuid?: string;
            broker_id?: number;
            account_id?: string;
            ta_code?: string;
            trade_account?: string;
            order_list_id?: string;
            fund_code?: string;
            create_new?: number;
            msg_no?: string;
            trans_time?: string;
            device_info?: string;
            uid?: string;
            client_id?: string;
            div_method?: number;
        }
    }

    export class TOpenTradeAccountRsp {
        busi_list_id: string = "";
        trade_account: string = "";
        order_list_id: string = "";
        ta_account: string = "";
        msg_no: string = "";
        original_code: number = 0;
        msg: string = "";
        app_sn: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TOpenTradeAccountRsp";
        protected static _classname = "JV.TOpenTradeAccountRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TOpenTradeAccountRsp;
            tmp.busi_list_id = is.readString(0, false, "");
            tmp.trade_account = is.readString(1, false, "");
            tmp.order_list_id = is.readString(2, false, "");
            tmp.ta_account = is.readString(3, false, "");
            tmp.msg_no = is.readString(4, false, "");
            tmp.original_code = is.readInt32(5, false, 0);
            tmp.msg = is.readString(6, false, "");
            tmp.app_sn = is.readString(7, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.busi_list_id);
            os.writeString(1, this.trade_account);
            os.writeString(2, this.order_list_id);
            os.writeString(3, this.ta_account);
            os.writeString(4, this.msg_no);
            os.writeInt32(5, this.original_code);
            os.writeString(6, this.msg);
            os.writeString(7, this.app_sn);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TOpenTradeAccountRsp.Object { 
            return {
                busi_list_id: this.busi_list_id,
                trade_account: this.trade_account,
                order_list_id: this.order_list_id,
                ta_account: this.ta_account,
                msg_no: this.msg_no,
                original_code: this.original_code,
                msg: this.msg,
                app_sn: this.app_sn
            };
        }

        readFromObject(json: TOpenTradeAccountRsp.Object) { 
            _hasOwnProperty.call(json, "busi_list_id") && (this.busi_list_id = json.busi_list_id!);
            _hasOwnProperty.call(json, "trade_account") && (this.trade_account = json.trade_account!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "ta_account") && (this.ta_account = json.ta_account!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            _hasOwnProperty.call(json, "app_sn") && (this.app_sn = json.app_sn!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TOpenTradeAccountRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TOpenTradeAccountRsp._readFrom(is);
        }
    }

    export namespace TOpenTradeAccountRsp {
        export interface Object {
            busi_list_id?: string;
            trade_account?: string;
            order_list_id?: string;
            ta_account?: string;
            msg_no?: string;
            original_code?: number;
            msg?: string;
            app_sn?: string;
        }
    }

    export class TQueryOpenTradeAccountRetReq {
        msg_no: string = "";
        order_list_id: string = "";
        device_info: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TQueryOpenTradeAccountRetReq";
        protected static _classname = "JV.TQueryOpenTradeAccountRetReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TQueryOpenTradeAccountRetReq;
            tmp.msg_no = is.readString(0, false, "");
            tmp.order_list_id = is.readString(1, false, "");
            tmp.device_info = is.readString(2, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.msg_no);
            os.writeString(1, this.order_list_id);
            os.writeString(2, this.device_info);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TQueryOpenTradeAccountRetReq.Object { 
            return {
                msg_no: this.msg_no,
                order_list_id: this.order_list_id,
                device_info: this.device_info
            };
        }

        readFromObject(json: TQueryOpenTradeAccountRetReq.Object) { 
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "order_list_id") && (this.order_list_id = json.order_list_id!);
            _hasOwnProperty.call(json, "device_info") && (this.device_info = json.device_info!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TQueryOpenTradeAccountRetReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TQueryOpenTradeAccountRetReq._readFrom(is);
        }
    }

    export namespace TQueryOpenTradeAccountRetReq {
        export interface Object {
            msg_no?: string;
            order_list_id?: string;
            device_info?: string;
        }
    }

    export class TQueryOpenTradeAccountRetRsp {
        busi_list_id: string = "";
        ta_account: string = "";
        ta_code: string = "";
        trade_account: string = "";
        fund_code: string = "";
        msg_no: string = "";
        original_code: number = 0;
        msg: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TQueryOpenTradeAccountRetRsp";
        protected static _classname = "JV.TQueryOpenTradeAccountRetRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TQueryOpenTradeAccountRetRsp;
            tmp.busi_list_id = is.readString(0, false, "");
            tmp.ta_account = is.readString(1, false, "");
            tmp.ta_code = is.readString(2, false, "");
            tmp.trade_account = is.readString(3, false, "");
            tmp.fund_code = is.readString(4, false, "");
            tmp.msg_no = is.readString(5, false, "");
            tmp.original_code = is.readInt32(6, false, 0);
            tmp.msg = is.readString(7, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.busi_list_id);
            os.writeString(1, this.ta_account);
            os.writeString(2, this.ta_code);
            os.writeString(3, this.trade_account);
            os.writeString(4, this.fund_code);
            os.writeString(5, this.msg_no);
            os.writeInt32(6, this.original_code);
            os.writeString(7, this.msg);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TQueryOpenTradeAccountRetRsp.Object { 
            return {
                busi_list_id: this.busi_list_id,
                ta_account: this.ta_account,
                ta_code: this.ta_code,
                trade_account: this.trade_account,
                fund_code: this.fund_code,
                msg_no: this.msg_no,
                original_code: this.original_code,
                msg: this.msg
            };
        }

        readFromObject(json: TQueryOpenTradeAccountRetRsp.Object) { 
            _hasOwnProperty.call(json, "busi_list_id") && (this.busi_list_id = json.busi_list_id!);
            _hasOwnProperty.call(json, "ta_account") && (this.ta_account = json.ta_account!);
            _hasOwnProperty.call(json, "ta_code") && (this.ta_code = json.ta_code!);
            _hasOwnProperty.call(json, "trade_account") && (this.trade_account = json.trade_account!);
            _hasOwnProperty.call(json, "fund_code") && (this.fund_code = json.fund_code!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TQueryOpenTradeAccountRetRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TQueryOpenTradeAccountRetRsp._readFrom(is);
        }
    }

    export namespace TQueryOpenTradeAccountRetRsp {
        export interface Object {
            busi_list_id?: string;
            ta_account?: string;
            ta_code?: string;
            trade_account?: string;
            fund_code?: string;
            msg_no?: string;
            original_code?: number;
            msg?: string;
        }
    }

    export class TGetUserInfoByOTCReq {
        msg_no: string = "";
        client_id: string = "";
        client_type: string = "";
        page_no: string = "";
        page_size: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TGetUserInfoByOTCReq";
        protected static _classname = "JV.TGetUserInfoByOTCReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TGetUserInfoByOTCReq;
            tmp.msg_no = is.readString(0, false, "");
            tmp.client_id = is.readString(1, false, "");
            tmp.client_type = is.readString(2, false, "");
            tmp.page_no = is.readString(3, false, "");
            tmp.page_size = is.readString(4, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.msg_no);
            os.writeString(1, this.client_id);
            os.writeString(2, this.client_type);
            os.writeString(3, this.page_no);
            os.writeString(4, this.page_size);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TGetUserInfoByOTCReq.Object { 
            return {
                msg_no: this.msg_no,
                client_id: this.client_id,
                client_type: this.client_type,
                page_no: this.page_no,
                page_size: this.page_size
            };
        }

        readFromObject(json: TGetUserInfoByOTCReq.Object) { 
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "client_type") && (this.client_type = json.client_type!);
            _hasOwnProperty.call(json, "page_no") && (this.page_no = json.page_no!);
            _hasOwnProperty.call(json, "page_size") && (this.page_size = json.page_size!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TGetUserInfoByOTCReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TGetUserInfoByOTCReq._readFrom(is);
        }
    }

    export namespace TGetUserInfoByOTCReq {
        export interface Object {
            msg_no?: string;
            client_id?: string;
            client_type?: string;
            page_no?: string;
            page_size?: string;
        }
    }

    export class TGetUserInfoByOTCRsp {
        original_code: number = 0;
        msg: string = "";
        msg_no: string = "";
        client_id: string = "";
        ecif_code: string = "";
        client_name: string = "";
        client_type: string = "";
        client_cls: string = "";
        client_stat: string = "";
        client_fname: string = "";
        int_org: string = "";
        corp_org: string = "";
        sex: string = "";
        id_type: string = "";
        id_code: string = "";
        mobile_tel: string = "";
        id_addr: string = "";
        zip_code: string = "";
        address: string = "";
        tel: string = "";
        email: string = "";
        citizenship: string = "";
        channels: string = "";
        inst_name: string = "";
        inst_icp: string = "";
        open_date: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TGetUserInfoByOTCRsp";
        protected static _classname = "JV.TGetUserInfoByOTCRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TGetUserInfoByOTCRsp;
            tmp.original_code = is.readInt32(0, false, 0);
            tmp.msg = is.readString(1, false, "");
            tmp.msg_no = is.readString(2, false, "");
            tmp.client_id = is.readString(3, false, "");
            tmp.ecif_code = is.readString(4, false, "");
            tmp.client_name = is.readString(5, false, "");
            tmp.client_type = is.readString(6, false, "");
            tmp.client_cls = is.readString(7, false, "");
            tmp.client_stat = is.readString(8, false, "");
            tmp.client_fname = is.readString(9, false, "");
            tmp.int_org = is.readString(10, false, "");
            tmp.corp_org = is.readString(11, false, "");
            tmp.sex = is.readString(12, false, "");
            tmp.id_type = is.readString(13, false, "");
            tmp.id_code = is.readString(14, false, "");
            tmp.mobile_tel = is.readString(15, false, "");
            tmp.id_addr = is.readString(16, false, "");
            tmp.zip_code = is.readString(17, false, "");
            tmp.address = is.readString(18, false, "");
            tmp.tel = is.readString(19, false, "");
            tmp.email = is.readString(20, false, "");
            tmp.citizenship = is.readString(21, false, "");
            tmp.channels = is.readString(22, false, "");
            tmp.inst_name = is.readString(23, false, "");
            tmp.inst_icp = is.readString(24, false, "");
            tmp.open_date = is.readString(25, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.original_code);
            os.writeString(1, this.msg);
            os.writeString(2, this.msg_no);
            os.writeString(3, this.client_id);
            os.writeString(4, this.ecif_code);
            os.writeString(5, this.client_name);
            os.writeString(6, this.client_type);
            os.writeString(7, this.client_cls);
            os.writeString(8, this.client_stat);
            os.writeString(9, this.client_fname);
            os.writeString(10, this.int_org);
            os.writeString(11, this.corp_org);
            os.writeString(12, this.sex);
            os.writeString(13, this.id_type);
            os.writeString(14, this.id_code);
            os.writeString(15, this.mobile_tel);
            os.writeString(16, this.id_addr);
            os.writeString(17, this.zip_code);
            os.writeString(18, this.address);
            os.writeString(19, this.tel);
            os.writeString(20, this.email);
            os.writeString(21, this.citizenship);
            os.writeString(22, this.channels);
            os.writeString(23, this.inst_name);
            os.writeString(24, this.inst_icp);
            os.writeString(25, this.open_date);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TGetUserInfoByOTCRsp.Object { 
            return {
                original_code: this.original_code,
                msg: this.msg,
                msg_no: this.msg_no,
                client_id: this.client_id,
                ecif_code: this.ecif_code,
                client_name: this.client_name,
                client_type: this.client_type,
                client_cls: this.client_cls,
                client_stat: this.client_stat,
                client_fname: this.client_fname,
                int_org: this.int_org,
                corp_org: this.corp_org,
                sex: this.sex,
                id_type: this.id_type,
                id_code: this.id_code,
                mobile_tel: this.mobile_tel,
                id_addr: this.id_addr,
                zip_code: this.zip_code,
                address: this.address,
                tel: this.tel,
                email: this.email,
                citizenship: this.citizenship,
                channels: this.channels,
                inst_name: this.inst_name,
                inst_icp: this.inst_icp,
                open_date: this.open_date
            };
        }

        readFromObject(json: TGetUserInfoByOTCRsp.Object) { 
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "ecif_code") && (this.ecif_code = json.ecif_code!);
            _hasOwnProperty.call(json, "client_name") && (this.client_name = json.client_name!);
            _hasOwnProperty.call(json, "client_type") && (this.client_type = json.client_type!);
            _hasOwnProperty.call(json, "client_cls") && (this.client_cls = json.client_cls!);
            _hasOwnProperty.call(json, "client_stat") && (this.client_stat = json.client_stat!);
            _hasOwnProperty.call(json, "client_fname") && (this.client_fname = json.client_fname!);
            _hasOwnProperty.call(json, "int_org") && (this.int_org = json.int_org!);
            _hasOwnProperty.call(json, "corp_org") && (this.corp_org = json.corp_org!);
            _hasOwnProperty.call(json, "sex") && (this.sex = json.sex!);
            _hasOwnProperty.call(json, "id_type") && (this.id_type = json.id_type!);
            _hasOwnProperty.call(json, "id_code") && (this.id_code = json.id_code!);
            _hasOwnProperty.call(json, "mobile_tel") && (this.mobile_tel = json.mobile_tel!);
            _hasOwnProperty.call(json, "id_addr") && (this.id_addr = json.id_addr!);
            _hasOwnProperty.call(json, "zip_code") && (this.zip_code = json.zip_code!);
            _hasOwnProperty.call(json, "address") && (this.address = json.address!);
            _hasOwnProperty.call(json, "tel") && (this.tel = json.tel!);
            _hasOwnProperty.call(json, "email") && (this.email = json.email!);
            _hasOwnProperty.call(json, "citizenship") && (this.citizenship = json.citizenship!);
            _hasOwnProperty.call(json, "channels") && (this.channels = json.channels!);
            _hasOwnProperty.call(json, "inst_name") && (this.inst_name = json.inst_name!);
            _hasOwnProperty.call(json, "inst_icp") && (this.inst_icp = json.inst_icp!);
            _hasOwnProperty.call(json, "open_date") && (this.open_date = json.open_date!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TGetUserInfoByOTCRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TGetUserInfoByOTCRsp._readFrom(is);
        }
    }

    export namespace TGetUserInfoByOTCRsp {
        export interface Object {
            original_code?: number;
            msg?: string;
            msg_no?: string;
            client_id?: string;
            ecif_code?: string;
            client_name?: string;
            client_type?: string;
            client_cls?: string;
            client_stat?: string;
            client_fname?: string;
            int_org?: string;
            corp_org?: string;
            sex?: string;
            id_type?: string;
            id_code?: string;
            mobile_tel?: string;
            id_addr?: string;
            zip_code?: string;
            address?: string;
            tel?: string;
            email?: string;
            citizenship?: string;
            channels?: string;
            inst_name?: string;
            inst_icp?: string;
            open_date?: string;
        }
    }

    export class TCheckTransPasswdReq {
        uid: string = "";
        client_id: string = "";
        account_id: string = "";
        trade_pwd: string = "";
        msg_no: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TCheckTransPasswdReq";
        protected static _classname = "JV.TCheckTransPasswdReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TCheckTransPasswdReq;
            tmp.uid = is.readString(0, false, "");
            tmp.client_id = is.readString(1, false, "");
            tmp.account_id = is.readString(2, false, "");
            tmp.trade_pwd = is.readString(3, false, "");
            tmp.msg_no = is.readString(4, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.uid);
            os.writeString(1, this.client_id);
            os.writeString(2, this.account_id);
            os.writeString(3, this.trade_pwd);
            os.writeString(4, this.msg_no);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TCheckTransPasswdReq.Object { 
            return {
                uid: this.uid,
                client_id: this.client_id,
                account_id: this.account_id,
                trade_pwd: this.trade_pwd,
                msg_no: this.msg_no
            };
        }

        readFromObject(json: TCheckTransPasswdReq.Object) { 
            _hasOwnProperty.call(json, "uid") && (this.uid = json.uid!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "trade_pwd") && (this.trade_pwd = json.trade_pwd!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TCheckTransPasswdReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TCheckTransPasswdReq._readFrom(is);
        }
    }

    export namespace TCheckTransPasswdReq {
        export interface Object {
            uid?: string;
            client_id?: string;
            account_id?: string;
            trade_pwd?: string;
            msg_no?: string;
        }
    }

    export class TCheckTransPasswdRsp {
        original_code: number = 0;
        original_msg: string = "";
        msg_no: string = "";
        rest_num: number = 0;

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TCheckTransPasswdRsp";
        protected static _classname = "JV.TCheckTransPasswdRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TCheckTransPasswdRsp;
            tmp.original_code = is.readInt32(0, false, 0);
            tmp.original_msg = is.readString(1, false, "");
            tmp.msg_no = is.readString(2, false, "");
            tmp.rest_num = is.readInt32(3, false, 0);
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.original_code);
            os.writeString(1, this.original_msg);
            os.writeString(2, this.msg_no);
            os.writeInt32(3, this.rest_num);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TCheckTransPasswdRsp.Object { 
            return {
                original_code: this.original_code,
                original_msg: this.original_msg,
                msg_no: this.msg_no,
                rest_num: this.rest_num
            };
        }

        readFromObject(json: TCheckTransPasswdRsp.Object) { 
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "original_msg") && (this.original_msg = json.original_msg!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "rest_num") && (this.rest_num = json.rest_num!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TCheckTransPasswdRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TCheckTransPasswdRsp._readFrom(is);
        }
    }

    export namespace TCheckTransPasswdRsp {
        export interface Object {
            original_code?: number;
            original_msg?: string;
            msg_no?: string;
            rest_num?: number;
        }
    }

    export class TQuerySysAvailableReq {
        msg_no: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TQuerySysAvailableReq";
        protected static _classname = "JV.TQuerySysAvailableReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TQuerySysAvailableReq;
            tmp.msg_no = is.readString(0, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.msg_no);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TQuerySysAvailableReq.Object { 
            return {
                msg_no: this.msg_no
            };
        }

        readFromObject(json: TQuerySysAvailableReq.Object) { 
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TQuerySysAvailableReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TQuerySysAvailableReq._readFrom(is);
        }
    }

    export namespace TQuerySysAvailableReq {
        export interface Object {
            msg_no?: string;
        }
    }

    export class TQuerySysAvailableRsp {
        original_code: number = 0;
        original_msg: string = "";
        msg_no: string = "";
        prev_ord_flag: number = 0;

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TQuerySysAvailableRsp";
        protected static _classname = "JV.TQuerySysAvailableRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TQuerySysAvailableRsp;
            tmp.original_code = is.readInt32(0, false, 0);
            tmp.original_msg = is.readString(1, false, "");
            tmp.msg_no = is.readString(2, false, "");
            tmp.prev_ord_flag = is.readInt32(3, false, 0);
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.original_code);
            os.writeString(1, this.original_msg);
            os.writeString(2, this.msg_no);
            os.writeInt32(3, this.prev_ord_flag);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TQuerySysAvailableRsp.Object { 
            return {
                original_code: this.original_code,
                original_msg: this.original_msg,
                msg_no: this.msg_no,
                prev_ord_flag: this.prev_ord_flag
            };
        }

        readFromObject(json: TQuerySysAvailableRsp.Object) { 
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "original_msg") && (this.original_msg = json.original_msg!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "prev_ord_flag") && (this.prev_ord_flag = json.prev_ord_flag!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TQuerySysAvailableRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TQuerySysAvailableRsp._readFrom(is);
        }
    }

    export namespace TQuerySysAvailableRsp {
        export interface Object {
            original_code?: number;
            original_msg?: string;
            msg_no?: string;
            prev_ord_flag?: number;
        }
    }

    export class TSyncProductInfoReq {
        oper_type: number = 0;
        iss_code: string = "";
        inst_code: string = "";
        inst_id: string = "";
        ta_code: string = "";
        product_brief_name: string = "";
        product_name: string = "";
        product_desc: string = "";
        currency: number = 0;
        risk_level: number = 0;
        invest_class: number = 0;
        expect_income: number = 0;
        invest_duration: number = 0;
        manager_distributor_id: string = "";
        custodian_distributor_id: string = "";
        market_code: number = 0;
        is_sign_econtract: number = 0;
        share_class: string = "";
        msg_no: string = "";
        inst_type: number = 0;
        inst_cls: number = 0;

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TSyncProductInfoReq";
        protected static _classname = "JV.TSyncProductInfoReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TSyncProductInfoReq;
            tmp.oper_type = is.readInt32(0, false, 0);
            tmp.iss_code = is.readString(1, false, "");
            tmp.inst_code = is.readString(2, false, "");
            tmp.inst_id = is.readString(3, false, "");
            tmp.ta_code = is.readString(4, false, "");
            tmp.product_brief_name = is.readString(5, false, "");
            tmp.product_name = is.readString(6, false, "");
            tmp.product_desc = is.readString(7, false, "");
            tmp.currency = is.readInt32(8, false, 0);
            tmp.risk_level = is.readInt32(9, false, 0);
            tmp.invest_class = is.readInt32(10, false, 0);
            tmp.expect_income = is.readInt32(11, false, 0);
            tmp.invest_duration = is.readInt32(12, false, 0);
            tmp.manager_distributor_id = is.readString(13, false, "");
            tmp.custodian_distributor_id = is.readString(14, false, "");
            tmp.market_code = is.readInt32(15, false, 0);
            tmp.is_sign_econtract = is.readInt32(16, false, 0);
            tmp.share_class = is.readString(17, false, "");
            tmp.msg_no = is.readString(18, false, "");
            tmp.inst_type = is.readInt32(19, false, 0);
            tmp.inst_cls = is.readInt32(20, false, 0);
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.oper_type);
            os.writeString(1, this.iss_code);
            os.writeString(2, this.inst_code);
            os.writeString(3, this.inst_id);
            os.writeString(4, this.ta_code);
            os.writeString(5, this.product_brief_name);
            os.writeString(6, this.product_name);
            os.writeString(7, this.product_desc);
            os.writeInt32(8, this.currency);
            os.writeInt32(9, this.risk_level);
            os.writeInt32(10, this.invest_class);
            os.writeInt32(11, this.expect_income);
            os.writeInt32(12, this.invest_duration);
            os.writeString(13, this.manager_distributor_id);
            os.writeString(14, this.custodian_distributor_id);
            os.writeInt32(15, this.market_code);
            os.writeInt32(16, this.is_sign_econtract);
            os.writeString(17, this.share_class);
            os.writeString(18, this.msg_no);
            os.writeInt32(19, this.inst_type);
            os.writeInt32(20, this.inst_cls);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TSyncProductInfoReq.Object { 
            return {
                oper_type: this.oper_type,
                iss_code: this.iss_code,
                inst_code: this.inst_code,
                inst_id: this.inst_id,
                ta_code: this.ta_code,
                product_brief_name: this.product_brief_name,
                product_name: this.product_name,
                product_desc: this.product_desc,
                currency: this.currency,
                risk_level: this.risk_level,
                invest_class: this.invest_class,
                expect_income: this.expect_income,
                invest_duration: this.invest_duration,
                manager_distributor_id: this.manager_distributor_id,
                custodian_distributor_id: this.custodian_distributor_id,
                market_code: this.market_code,
                is_sign_econtract: this.is_sign_econtract,
                share_class: this.share_class,
                msg_no: this.msg_no,
                inst_type: this.inst_type,
                inst_cls: this.inst_cls
            };
        }

        readFromObject(json: TSyncProductInfoReq.Object) { 
            _hasOwnProperty.call(json, "oper_type") && (this.oper_type = json.oper_type!);
            _hasOwnProperty.call(json, "iss_code") && (this.iss_code = json.iss_code!);
            _hasOwnProperty.call(json, "inst_code") && (this.inst_code = json.inst_code!);
            _hasOwnProperty.call(json, "inst_id") && (this.inst_id = json.inst_id!);
            _hasOwnProperty.call(json, "ta_code") && (this.ta_code = json.ta_code!);
            _hasOwnProperty.call(json, "product_brief_name") && (this.product_brief_name = json.product_brief_name!);
            _hasOwnProperty.call(json, "product_name") && (this.product_name = json.product_name!);
            _hasOwnProperty.call(json, "product_desc") && (this.product_desc = json.product_desc!);
            _hasOwnProperty.call(json, "currency") && (this.currency = json.currency!);
            _hasOwnProperty.call(json, "risk_level") && (this.risk_level = json.risk_level!);
            _hasOwnProperty.call(json, "invest_class") && (this.invest_class = json.invest_class!);
            _hasOwnProperty.call(json, "expect_income") && (this.expect_income = json.expect_income!);
            _hasOwnProperty.call(json, "invest_duration") && (this.invest_duration = json.invest_duration!);
            _hasOwnProperty.call(json, "manager_distributor_id") && (this.manager_distributor_id = json.manager_distributor_id!);
            _hasOwnProperty.call(json, "custodian_distributor_id") && (this.custodian_distributor_id = json.custodian_distributor_id!);
            _hasOwnProperty.call(json, "market_code") && (this.market_code = json.market_code!);
            _hasOwnProperty.call(json, "is_sign_econtract") && (this.is_sign_econtract = json.is_sign_econtract!);
            _hasOwnProperty.call(json, "share_class") && (this.share_class = json.share_class!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "inst_type") && (this.inst_type = json.inst_type!);
            _hasOwnProperty.call(json, "inst_cls") && (this.inst_cls = json.inst_cls!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TSyncProductInfoReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TSyncProductInfoReq._readFrom(is);
        }
    }

    export namespace TSyncProductInfoReq {
        export interface Object {
            oper_type?: number;
            iss_code?: string;
            inst_code?: string;
            inst_id?: string;
            ta_code?: string;
            product_brief_name?: string;
            product_name?: string;
            product_desc?: string;
            currency?: number;
            risk_level?: number;
            invest_class?: number;
            expect_income?: number;
            invest_duration?: number;
            manager_distributor_id?: string;
            custodian_distributor_id?: string;
            market_code?: number;
            is_sign_econtract?: number;
            share_class?: string;
            msg_no?: string;
            inst_type?: number;
            inst_cls?: number;
        }
    }

    export class TSyncProductInfoRsp {
        original_code: number = 0;
        msg: string = "";
        msg_no: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TSyncProductInfoRsp";
        protected static _classname = "JV.TSyncProductInfoRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TSyncProductInfoRsp;
            tmp.original_code = is.readInt32(0, false, 0);
            tmp.msg = is.readString(1, false, "");
            tmp.msg_no = is.readString(2, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.original_code);
            os.writeString(1, this.msg);
            os.writeString(2, this.msg_no);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TSyncProductInfoRsp.Object { 
            return {
                original_code: this.original_code,
                msg: this.msg,
                msg_no: this.msg_no
            };
        }

        readFromObject(json: TSyncProductInfoRsp.Object) { 
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TSyncProductInfoRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TSyncProductInfoRsp._readFrom(is);
        }
    }

    export namespace TSyncProductInfoRsp {
        export interface Object {
            original_code?: number;
            msg?: string;
            msg_no?: string;
        }
    }

    export class TProductClearInfo {
        trade_type: number = 0;
        fund_sett_tn: number = 0;
        share_sett_tn: number = 0;
        fund_avl_tn: number = 0;
        share_avl_tn: number = 0;

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TProductClearInfo";
        protected static _classname = "JV.TProductClearInfo";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TProductClearInfo;
            tmp.trade_type = is.readInt32(0, false, 0);
            tmp.fund_sett_tn = is.readInt32(1, false, 0);
            tmp.share_sett_tn = is.readInt32(2, false, 0);
            tmp.fund_avl_tn = is.readInt32(3, false, 0);
            tmp.share_avl_tn = is.readInt32(4, false, 0);
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.trade_type);
            os.writeInt32(1, this.fund_sett_tn);
            os.writeInt32(2, this.share_sett_tn);
            os.writeInt32(3, this.fund_avl_tn);
            os.writeInt32(4, this.share_avl_tn);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TProductClearInfo.Object { 
            return {
                trade_type: this.trade_type,
                fund_sett_tn: this.fund_sett_tn,
                share_sett_tn: this.share_sett_tn,
                fund_avl_tn: this.fund_avl_tn,
                share_avl_tn: this.share_avl_tn
            };
        }

        readFromObject(json: TProductClearInfo.Object) { 
            _hasOwnProperty.call(json, "trade_type") && (this.trade_type = json.trade_type!);
            _hasOwnProperty.call(json, "fund_sett_tn") && (this.fund_sett_tn = json.fund_sett_tn!);
            _hasOwnProperty.call(json, "share_sett_tn") && (this.share_sett_tn = json.share_sett_tn!);
            _hasOwnProperty.call(json, "fund_avl_tn") && (this.fund_avl_tn = json.fund_avl_tn!);
            _hasOwnProperty.call(json, "share_avl_tn") && (this.share_avl_tn = json.share_avl_tn!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TProductClearInfo();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TProductClearInfo._readFrom(is);
        }
    }

    export namespace TProductClearInfo {
        export interface Object {
            trade_type?: number;
            fund_sett_tn?: number;
            share_sett_tn?: number;
            fund_avl_tn?: number;
            share_avl_tn?: number;
        }
    }

    export class TSyncProductClearInfoReq {
        msg_no: string = "";
        inst_id: string = "";
        clear_info: TarsStream.List<JV.TProductClearInfo> = new TarsStream.List(JV.TProductClearInfo);

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TSyncProductClearInfoReq";
        protected static _classname = "JV.TSyncProductClearInfoReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TSyncProductClearInfoReq;
            tmp.msg_no = is.readString(0, false, "");
            tmp.inst_id = is.readString(1, false, "");
            tmp.clear_info = is.readList(2, false, TarsStream.List(JV.TProductClearInfo));
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.msg_no);
            os.writeString(1, this.inst_id);
            os.writeList(2, this.clear_info);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TSyncProductClearInfoReq.Object { 
            return {
                msg_no: this.msg_no,
                inst_id: this.inst_id,
                clear_info: this.clear_info.toObject()
            };
        }

        readFromObject(json: TSyncProductClearInfoReq.Object) { 
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "inst_id") && (this.inst_id = json.inst_id!);
            _hasOwnProperty.call(json, "clear_info") && (this.clear_info.readFromObject(json.clear_info!));
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TSyncProductClearInfoReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TSyncProductClearInfoReq._readFrom(is);
        }
    }

    export namespace TSyncProductClearInfoReq {
        export interface Object {
            msg_no?: string;
            inst_id?: string;
            clear_info?: Array<JV.TProductClearInfo.Object>;
        }
    }

    export class TSyncProductClearInfoRsp {
        original_code: number = 0;
        msg: string = "";
        msg_no: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TSyncProductClearInfoRsp";
        protected static _classname = "JV.TSyncProductClearInfoRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TSyncProductClearInfoRsp;
            tmp.original_code = is.readInt32(0, false, 0);
            tmp.msg = is.readString(1, false, "");
            tmp.msg_no = is.readString(2, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.original_code);
            os.writeString(1, this.msg);
            os.writeString(2, this.msg_no);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TSyncProductClearInfoRsp.Object { 
            return {
                original_code: this.original_code,
                msg: this.msg,
                msg_no: this.msg_no
            };
        }

        readFromObject(json: TSyncProductClearInfoRsp.Object) { 
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TSyncProductClearInfoRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TSyncProductClearInfoRsp._readFrom(is);
        }
    }

    export namespace TSyncProductClearInfoRsp {
        export interface Object {
            original_code?: number;
            msg?: string;
            msg_no?: string;
        }
    }

    export class TSyncClientInfoReq {
        oper_type: number = 0;
        client_id: string = "";
        client_name: string = "";
        client_state: number = 0;
        sex: number = 0;
        id_type: number = 0;
        id_code: string = "";
        id_exp_date: string = "";
        id_addr: string = "";
        email: string = "";
        mobile: string = "";
        birthday: string = "";
        account_id: string = "";
        msg_no: string = "";
        branch_code: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TSyncClientInfoReq";
        protected static _classname = "JV.TSyncClientInfoReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TSyncClientInfoReq;
            tmp.oper_type = is.readInt32(0, false, 0);
            tmp.client_id = is.readString(1, false, "");
            tmp.client_name = is.readString(2, false, "");
            tmp.client_state = is.readInt32(3, false, 0);
            tmp.sex = is.readInt32(4, false, 0);
            tmp.id_type = is.readInt32(5, false, 0);
            tmp.id_code = is.readString(6, false, "");
            tmp.id_exp_date = is.readString(7, false, "");
            tmp.id_addr = is.readString(8, false, "");
            tmp.email = is.readString(9, false, "");
            tmp.mobile = is.readString(10, false, "");
            tmp.birthday = is.readString(11, false, "");
            tmp.account_id = is.readString(12, false, "");
            tmp.msg_no = is.readString(13, false, "");
            tmp.branch_code = is.readString(14, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.oper_type);
            os.writeString(1, this.client_id);
            os.writeString(2, this.client_name);
            os.writeInt32(3, this.client_state);
            os.writeInt32(4, this.sex);
            os.writeInt32(5, this.id_type);
            os.writeString(6, this.id_code);
            os.writeString(7, this.id_exp_date);
            os.writeString(8, this.id_addr);
            os.writeString(9, this.email);
            os.writeString(10, this.mobile);
            os.writeString(11, this.birthday);
            os.writeString(12, this.account_id);
            os.writeString(13, this.msg_no);
            os.writeString(14, this.branch_code);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TSyncClientInfoReq.Object { 
            return {
                oper_type: this.oper_type,
                client_id: this.client_id,
                client_name: this.client_name,
                client_state: this.client_state,
                sex: this.sex,
                id_type: this.id_type,
                id_code: this.id_code,
                id_exp_date: this.id_exp_date,
                id_addr: this.id_addr,
                email: this.email,
                mobile: this.mobile,
                birthday: this.birthday,
                account_id: this.account_id,
                msg_no: this.msg_no,
                branch_code: this.branch_code
            };
        }

        readFromObject(json: TSyncClientInfoReq.Object) { 
            _hasOwnProperty.call(json, "oper_type") && (this.oper_type = json.oper_type!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "client_name") && (this.client_name = json.client_name!);
            _hasOwnProperty.call(json, "client_state") && (this.client_state = json.client_state!);
            _hasOwnProperty.call(json, "sex") && (this.sex = json.sex!);
            _hasOwnProperty.call(json, "id_type") && (this.id_type = json.id_type!);
            _hasOwnProperty.call(json, "id_code") && (this.id_code = json.id_code!);
            _hasOwnProperty.call(json, "id_exp_date") && (this.id_exp_date = json.id_exp_date!);
            _hasOwnProperty.call(json, "id_addr") && (this.id_addr = json.id_addr!);
            _hasOwnProperty.call(json, "email") && (this.email = json.email!);
            _hasOwnProperty.call(json, "mobile") && (this.mobile = json.mobile!);
            _hasOwnProperty.call(json, "birthday") && (this.birthday = json.birthday!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            _hasOwnProperty.call(json, "branch_code") && (this.branch_code = json.branch_code!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TSyncClientInfoReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TSyncClientInfoReq._readFrom(is);
        }
    }

    export namespace TSyncClientInfoReq {
        export interface Object {
            oper_type?: number;
            client_id?: string;
            client_name?: string;
            client_state?: number;
            sex?: number;
            id_type?: number;
            id_code?: string;
            id_exp_date?: string;
            id_addr?: string;
            email?: string;
            mobile?: string;
            birthday?: string;
            account_id?: string;
            msg_no?: string;
            branch_code?: string;
        }
    }

    export class TSyncClientInfoRsp {
        original_code: number = 0;
        msg: string = "";
        msg_no: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TSyncClientInfoRsp";
        protected static _classname = "JV.TSyncClientInfoRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TSyncClientInfoRsp;
            tmp.original_code = is.readInt32(0, false, 0);
            tmp.msg = is.readString(1, false, "");
            tmp.msg_no = is.readString(2, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.original_code);
            os.writeString(1, this.msg);
            os.writeString(2, this.msg_no);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TSyncClientInfoRsp.Object { 
            return {
                original_code: this.original_code,
                msg: this.msg,
                msg_no: this.msg_no
            };
        }

        readFromObject(json: TSyncClientInfoRsp.Object) { 
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "msg") && (this.msg = json.msg!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TSyncClientInfoRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TSyncClientInfoRsp._readFrom(is);
        }
    }

    export namespace TSyncClientInfoRsp {
        export interface Object {
            original_code?: number;
            msg?: string;
            msg_no?: string;
        }
    }

    export class TChangePasswordReq {
        uid: string = "";
        client_id: string = "";
        account_id: string = "";
        auth_type: number = 0;
        old_pwd: string = "";
        new_pwd: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TChangePasswordReq";
        protected static _classname = "JV.TChangePasswordReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TChangePasswordReq;
            tmp.uid = is.readString(0, false, "");
            tmp.client_id = is.readString(1, false, "");
            tmp.account_id = is.readString(2, false, "");
            tmp.auth_type = is.readInt32(3, false, 0);
            tmp.old_pwd = is.readString(4, false, "");
            tmp.new_pwd = is.readString(5, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.uid);
            os.writeString(1, this.client_id);
            os.writeString(2, this.account_id);
            os.writeInt32(3, this.auth_type);
            os.writeString(4, this.old_pwd);
            os.writeString(5, this.new_pwd);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TChangePasswordReq.Object { 
            return {
                uid: this.uid,
                client_id: this.client_id,
                account_id: this.account_id,
                auth_type: this.auth_type,
                old_pwd: this.old_pwd,
                new_pwd: this.new_pwd
            };
        }

        readFromObject(json: TChangePasswordReq.Object) { 
            _hasOwnProperty.call(json, "uid") && (this.uid = json.uid!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "auth_type") && (this.auth_type = json.auth_type!);
            _hasOwnProperty.call(json, "old_pwd") && (this.old_pwd = json.old_pwd!);
            _hasOwnProperty.call(json, "new_pwd") && (this.new_pwd = json.new_pwd!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TChangePasswordReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TChangePasswordReq._readFrom(is);
        }
    }

    export namespace TChangePasswordReq {
        export interface Object {
            uid?: string;
            client_id?: string;
            account_id?: string;
            auth_type?: number;
            old_pwd?: string;
            new_pwd?: string;
        }
    }

    export class TChangePasswordRsp {
        original_code: number = 0;
        original_msg: string = "";
        msg_no: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TChangePasswordRsp";
        protected static _classname = "JV.TChangePasswordRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TChangePasswordRsp;
            tmp.original_code = is.readInt32(0, false, 0);
            tmp.original_msg = is.readString(1, false, "");
            tmp.msg_no = is.readString(2, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.original_code);
            os.writeString(1, this.original_msg);
            os.writeString(2, this.msg_no);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TChangePasswordRsp.Object { 
            return {
                original_code: this.original_code,
                original_msg: this.original_msg,
                msg_no: this.msg_no
            };
        }

        readFromObject(json: TChangePasswordRsp.Object) { 
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "original_msg") && (this.original_msg = json.original_msg!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TChangePasswordRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TChangePasswordRsp._readFrom(is);
        }
    }

    export namespace TChangePasswordRsp {
        export interface Object {
            original_code?: number;
            original_msg?: string;
            msg_no?: string;
        }
    }

    export class TResetPasswordReq {
        uid: string = "";
        client_id: string = "";
        account_id: string = "";
        pwd_type: number = 0;
        new_password: string = "";
        op_remark: string = "";
        id_type: number = 0;
        id_code: string = "";
        id_name: string = "";
        tel_no: string = "";
        id_front_img_url: string = "";
        id_back_img_url: string = "";
        face_video_url: string = "";
        face_video_img_url: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TResetPasswordReq";
        protected static _classname = "JV.TResetPasswordReq";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TResetPasswordReq;
            tmp.uid = is.readString(0, false, "");
            tmp.client_id = is.readString(1, false, "");
            tmp.account_id = is.readString(2, false, "");
            tmp.pwd_type = is.readInt32(3, false, 0);
            tmp.new_password = is.readString(4, false, "");
            tmp.op_remark = is.readString(5, false, "");
            tmp.id_type = is.readInt32(6, false, 0);
            tmp.id_code = is.readString(7, false, "");
            tmp.id_name = is.readString(8, false, "");
            tmp.tel_no = is.readString(9, false, "");
            tmp.id_front_img_url = is.readString(10, false, "");
            tmp.id_back_img_url = is.readString(11, false, "");
            tmp.face_video_url = is.readString(12, false, "");
            tmp.face_video_img_url = is.readString(13, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeString(0, this.uid);
            os.writeString(1, this.client_id);
            os.writeString(2, this.account_id);
            os.writeInt32(3, this.pwd_type);
            os.writeString(4, this.new_password);
            os.writeString(5, this.op_remark);
            os.writeInt32(6, this.id_type);
            os.writeString(7, this.id_code);
            os.writeString(8, this.id_name);
            os.writeString(9, this.tel_no);
            os.writeString(10, this.id_front_img_url);
            os.writeString(11, this.id_back_img_url);
            os.writeString(12, this.face_video_url);
            os.writeString(13, this.face_video_img_url);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TResetPasswordReq.Object { 
            return {
                uid: this.uid,
                client_id: this.client_id,
                account_id: this.account_id,
                pwd_type: this.pwd_type,
                new_password: this.new_password,
                op_remark: this.op_remark,
                id_type: this.id_type,
                id_code: this.id_code,
                id_name: this.id_name,
                tel_no: this.tel_no,
                id_front_img_url: this.id_front_img_url,
                id_back_img_url: this.id_back_img_url,
                face_video_url: this.face_video_url,
                face_video_img_url: this.face_video_img_url
            };
        }

        readFromObject(json: TResetPasswordReq.Object) { 
            _hasOwnProperty.call(json, "uid") && (this.uid = json.uid!);
            _hasOwnProperty.call(json, "client_id") && (this.client_id = json.client_id!);
            _hasOwnProperty.call(json, "account_id") && (this.account_id = json.account_id!);
            _hasOwnProperty.call(json, "pwd_type") && (this.pwd_type = json.pwd_type!);
            _hasOwnProperty.call(json, "new_password") && (this.new_password = json.new_password!);
            _hasOwnProperty.call(json, "op_remark") && (this.op_remark = json.op_remark!);
            _hasOwnProperty.call(json, "id_type") && (this.id_type = json.id_type!);
            _hasOwnProperty.call(json, "id_code") && (this.id_code = json.id_code!);
            _hasOwnProperty.call(json, "id_name") && (this.id_name = json.id_name!);
            _hasOwnProperty.call(json, "tel_no") && (this.tel_no = json.tel_no!);
            _hasOwnProperty.call(json, "id_front_img_url") && (this.id_front_img_url = json.id_front_img_url!);
            _hasOwnProperty.call(json, "id_back_img_url") && (this.id_back_img_url = json.id_back_img_url!);
            _hasOwnProperty.call(json, "face_video_url") && (this.face_video_url = json.face_video_url!);
            _hasOwnProperty.call(json, "face_video_img_url") && (this.face_video_img_url = json.face_video_img_url!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TResetPasswordReq();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TResetPasswordReq._readFrom(is);
        }
    }

    export namespace TResetPasswordReq {
        export interface Object {
            uid?: string;
            client_id?: string;
            account_id?: string;
            pwd_type?: number;
            new_password?: string;
            op_remark?: string;
            id_type?: number;
            id_code?: string;
            id_name?: string;
            tel_no?: string;
            id_front_img_url?: string;
            id_back_img_url?: string;
            face_video_url?: string;
            face_video_img_url?: string;
        }
    }

    export class TResetPasswordRsp {
        original_code: number = 0;
        original_msg: string = "";
        msg_no: string = "";

        protected _proto_struct_name_ = "";
        protected _classname = "JV.TResetPasswordRsp";
        protected static _classname = "JV.TResetPasswordRsp";
        protected static _write(os: TarsStream.TarsOutputStream, tag: number, val: any) { os.writeStruct(tag, val); }
        protected static _read(is: TarsStream.TarsInputStream, tag: number, def?: any) { return is.readStruct(tag, true, def); }
        protected static _readFrom(is: TarsStream.TarsInputStream) {
            const tmp = new TResetPasswordRsp;
            tmp.original_code = is.readInt32(0, false, 0);
            tmp.original_msg = is.readString(1, false, "");
            tmp.msg_no = is.readString(2, false, "");
            return tmp;
        }

        protected _writeTo(os: TarsStream.TarsOutputStream) {
            os.writeInt32(0, this.original_code);
            os.writeString(1, this.original_msg);
            os.writeString(2, this.msg_no);
        }

        protected _equal() {
            assert.fail("this structure not define key operation");
        }

        protected _genKey() {
            if (!this._proto_struct_name_) {
                this._proto_struct_name_ = "STRUCT" + Math.random();
            }
            return this._proto_struct_name_;
        }

        toObject(): TResetPasswordRsp.Object { 
            return {
                original_code: this.original_code,
                original_msg: this.original_msg,
                msg_no: this.msg_no
            };
        }

        readFromObject(json: TResetPasswordRsp.Object) { 
            _hasOwnProperty.call(json, "original_code") && (this.original_code = json.original_code!);
            _hasOwnProperty.call(json, "original_msg") && (this.original_msg = json.original_msg!);
            _hasOwnProperty.call(json, "msg_no") && (this.msg_no = json.msg_no!);
            return this;
        }

        toBinBuffer() {
            const os = new TarsStream.TarsOutputStream();
            this._writeTo(os);
            return os.getBinBuffer();
        }

        static new() {
            return new TResetPasswordRsp();
        }

        static create(is: TarsStream.TarsInputStream) {
            return JV.TResetPasswordRsp._readFrom(is);
        }
    }

    export namespace TResetPasswordRsp {
        export interface Object {
            original_code?: number;
            original_msg?: string;
            msg_no?: string;
        }
    }

}


